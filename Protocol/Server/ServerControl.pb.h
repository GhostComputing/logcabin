// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol/Server/ServerControl.proto

#ifndef PROTOBUF_Protocol_2fServer_2fServerControl_2eproto__INCLUDED
#define PROTOBUF_Protocol_2fServer_2fServerControl_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Protocol/Server/ServerStats.pb.h"
// @@protoc_insertion_point(includes)

namespace LogCabin {
namespace Protocol {
namespace ServerControl {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

class Error;
class DebugFilenameGet;
class DebugFilenameGet_Request;
class DebugFilenameGet_Response;
class DebugFilenameSet;
class DebugFilenameSet_Request;
class DebugFilenameSet_Response;
class DebugPolicyGet;
class DebugPolicyGet_Request;
class DebugPolicyGet_Response;
class DebugPolicySet;
class DebugPolicySet_Request;
class DebugPolicySet_Response;
class DebugRotate;
class DebugRotate_Request;
class DebugRotate_Response;
class ServerInfoGet;
class ServerInfoGet_Request;
class ServerInfoGet_Response;
class ServerStatsDump;
class ServerStatsDump_Request;
class ServerStatsDump_Response;
class ServerStatsGet;
class ServerStatsGet_Request;
class ServerStatsGet_Response;
class SnapshotControl;
class SnapshotControl_Request;
class SnapshotControl_Response;
class SnapshotInhibitGet;
class SnapshotInhibitGet_Request;
class SnapshotInhibitGet_Response;
class SnapshotInhibitSet;
class SnapshotInhibitSet_Request;
class SnapshotInhibitSet_Response;

enum OpCode {
  DEBUG_FILENAME_GET = 1,
  DEBUG_FILENAME_SET = 2,
  DEBUG_POLICY_GET = 3,
  DEBUG_POLICY_SET = 4,
  DEBUG_ROTATE = 5,
  SERVER_INFO_GET = 6,
  SERVER_STATS_DUMP = 7,
  SERVER_STATS_GET = 8,
  SNAPSHOT_CONTROL = 9,
  SNAPSHOT_INHIBIT_GET = 10,
  SNAPSHOT_INHIBIT_SET = 11
};
bool OpCode_IsValid(int value);
const OpCode OpCode_MIN = DEBUG_FILENAME_GET;
const OpCode OpCode_MAX = SNAPSHOT_INHIBIT_SET;
const int OpCode_ARRAYSIZE = OpCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpCode_descriptor();
inline const ::std::string& OpCode_Name(OpCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpCode_descriptor(), value);
}
inline bool OpCode_Parse(
    const ::std::string& name, OpCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpCode>(
    OpCode_descriptor(), name, value);
}
enum SnapshotCommand {
  UNKNOWN_SNAPSHOT_COMMAND = 0,
  START_SNAPSHOT = 1,
  STOP_SNAPSHOT = 2,
  RESTART_SNAPSHOT = 3
};
bool SnapshotCommand_IsValid(int value);
const SnapshotCommand SnapshotCommand_MIN = UNKNOWN_SNAPSHOT_COMMAND;
const SnapshotCommand SnapshotCommand_MAX = RESTART_SNAPSHOT;
const int SnapshotCommand_ARRAYSIZE = SnapshotCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* SnapshotCommand_descriptor();
inline const ::std::string& SnapshotCommand_Name(SnapshotCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    SnapshotCommand_descriptor(), value);
}
inline bool SnapshotCommand_Parse(
    const ::std::string& name, SnapshotCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SnapshotCommand>(
    SnapshotCommand_descriptor(), name, value);
}
// ===================================================================

class Error : public ::google::protobuf::Message {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  Error* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.Error)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static Error* default_instance_;
};
// -------------------------------------------------------------------

class DebugFilenameGet_Request : public ::google::protobuf::Message {
 public:
  DebugFilenameGet_Request();
  virtual ~DebugFilenameGet_Request();

  DebugFilenameGet_Request(const DebugFilenameGet_Request& from);

  inline DebugFilenameGet_Request& operator=(const DebugFilenameGet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugFilenameGet_Request& default_instance();

  void Swap(DebugFilenameGet_Request* other);

  // implements Message ----------------------------------------------

  DebugFilenameGet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugFilenameGet_Request& from);
  void MergeFrom(const DebugFilenameGet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugFilenameGet.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugFilenameGet_Request* default_instance_;
};
// -------------------------------------------------------------------

class DebugFilenameGet_Response : public ::google::protobuf::Message {
 public:
  DebugFilenameGet_Response();
  virtual ~DebugFilenameGet_Response();

  DebugFilenameGet_Response(const DebugFilenameGet_Response& from);

  inline DebugFilenameGet_Response& operator=(const DebugFilenameGet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugFilenameGet_Response& default_instance();

  void Swap(DebugFilenameGet_Response* other);

  // implements Message ----------------------------------------------

  DebugFilenameGet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugFilenameGet_Response& from);
  void MergeFrom(const DebugFilenameGet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugFilenameGet_Response* default_instance_;
};
// -------------------------------------------------------------------

class DebugFilenameGet : public ::google::protobuf::Message {
 public:
  DebugFilenameGet();
  virtual ~DebugFilenameGet();

  DebugFilenameGet(const DebugFilenameGet& from);

  inline DebugFilenameGet& operator=(const DebugFilenameGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugFilenameGet& default_instance();

  void Swap(DebugFilenameGet* other);

  // implements Message ----------------------------------------------

  DebugFilenameGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugFilenameGet& from);
  void MergeFrom(const DebugFilenameGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DebugFilenameGet_Request Request;
  typedef DebugFilenameGet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugFilenameGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugFilenameGet* default_instance_;
};
// -------------------------------------------------------------------

class DebugFilenameSet_Request : public ::google::protobuf::Message {
 public:
  DebugFilenameSet_Request();
  virtual ~DebugFilenameSet_Request();

  DebugFilenameSet_Request(const DebugFilenameSet_Request& from);

  inline DebugFilenameSet_Request& operator=(const DebugFilenameSet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugFilenameSet_Request& default_instance();

  void Swap(DebugFilenameSet_Request* other);

  // implements Message ----------------------------------------------

  DebugFilenameSet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugFilenameSet_Request& from);
  void MergeFrom(const DebugFilenameSet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugFilenameSet_Request* default_instance_;
};
// -------------------------------------------------------------------

class DebugFilenameSet_Response : public ::google::protobuf::Message {
 public:
  DebugFilenameSet_Response();
  virtual ~DebugFilenameSet_Response();

  DebugFilenameSet_Response(const DebugFilenameSet_Response& from);

  inline DebugFilenameSet_Response& operator=(const DebugFilenameSet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugFilenameSet_Response& default_instance();

  void Swap(DebugFilenameSet_Response* other);

  // implements Message ----------------------------------------------

  DebugFilenameSet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugFilenameSet_Response& from);
  void MergeFrom(const DebugFilenameSet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugFilenameSet_Response* default_instance_;
};
// -------------------------------------------------------------------

class DebugFilenameSet : public ::google::protobuf::Message {
 public:
  DebugFilenameSet();
  virtual ~DebugFilenameSet();

  DebugFilenameSet(const DebugFilenameSet& from);

  inline DebugFilenameSet& operator=(const DebugFilenameSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugFilenameSet& default_instance();

  void Swap(DebugFilenameSet* other);

  // implements Message ----------------------------------------------

  DebugFilenameSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugFilenameSet& from);
  void MergeFrom(const DebugFilenameSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DebugFilenameSet_Request Request;
  typedef DebugFilenameSet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugFilenameSet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugFilenameSet* default_instance_;
};
// -------------------------------------------------------------------

class DebugPolicyGet_Request : public ::google::protobuf::Message {
 public:
  DebugPolicyGet_Request();
  virtual ~DebugPolicyGet_Request();

  DebugPolicyGet_Request(const DebugPolicyGet_Request& from);

  inline DebugPolicyGet_Request& operator=(const DebugPolicyGet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugPolicyGet_Request& default_instance();

  void Swap(DebugPolicyGet_Request* other);

  // implements Message ----------------------------------------------

  DebugPolicyGet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugPolicyGet_Request& from);
  void MergeFrom(const DebugPolicyGet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugPolicyGet.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugPolicyGet_Request* default_instance_;
};
// -------------------------------------------------------------------

class DebugPolicyGet_Response : public ::google::protobuf::Message {
 public:
  DebugPolicyGet_Response();
  virtual ~DebugPolicyGet_Response();

  DebugPolicyGet_Response(const DebugPolicyGet_Response& from);

  inline DebugPolicyGet_Response& operator=(const DebugPolicyGet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugPolicyGet_Response& default_instance();

  void Swap(DebugPolicyGet_Response* other);

  // implements Message ----------------------------------------------

  DebugPolicyGet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugPolicyGet_Response& from);
  void MergeFrom(const DebugPolicyGet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string policy = 1;
  inline bool has_policy() const;
  inline void clear_policy();
  static const int kPolicyFieldNumber = 1;
  inline const ::std::string& policy() const;
  inline void set_policy(const ::std::string& value);
  inline void set_policy(const char* value);
  inline void set_policy(const char* value, size_t size);
  inline ::std::string* mutable_policy();
  inline ::std::string* release_policy();
  inline void set_allocated_policy(::std::string* policy);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response)
 private:
  inline void set_has_policy();
  inline void clear_has_policy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* policy_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugPolicyGet_Response* default_instance_;
};
// -------------------------------------------------------------------

class DebugPolicyGet : public ::google::protobuf::Message {
 public:
  DebugPolicyGet();
  virtual ~DebugPolicyGet();

  DebugPolicyGet(const DebugPolicyGet& from);

  inline DebugPolicyGet& operator=(const DebugPolicyGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugPolicyGet& default_instance();

  void Swap(DebugPolicyGet* other);

  // implements Message ----------------------------------------------

  DebugPolicyGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugPolicyGet& from);
  void MergeFrom(const DebugPolicyGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DebugPolicyGet_Request Request;
  typedef DebugPolicyGet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugPolicyGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugPolicyGet* default_instance_;
};
// -------------------------------------------------------------------

class DebugPolicySet_Request : public ::google::protobuf::Message {
 public:
  DebugPolicySet_Request();
  virtual ~DebugPolicySet_Request();

  DebugPolicySet_Request(const DebugPolicySet_Request& from);

  inline DebugPolicySet_Request& operator=(const DebugPolicySet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugPolicySet_Request& default_instance();

  void Swap(DebugPolicySet_Request* other);

  // implements Message ----------------------------------------------

  DebugPolicySet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugPolicySet_Request& from);
  void MergeFrom(const DebugPolicySet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string policy = 1;
  inline bool has_policy() const;
  inline void clear_policy();
  static const int kPolicyFieldNumber = 1;
  inline const ::std::string& policy() const;
  inline void set_policy(const ::std::string& value);
  inline void set_policy(const char* value);
  inline void set_policy(const char* value, size_t size);
  inline ::std::string* mutable_policy();
  inline ::std::string* release_policy();
  inline void set_allocated_policy(::std::string* policy);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugPolicySet.Request)
 private:
  inline void set_has_policy();
  inline void clear_has_policy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* policy_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugPolicySet_Request* default_instance_;
};
// -------------------------------------------------------------------

class DebugPolicySet_Response : public ::google::protobuf::Message {
 public:
  DebugPolicySet_Response();
  virtual ~DebugPolicySet_Response();

  DebugPolicySet_Response(const DebugPolicySet_Response& from);

  inline DebugPolicySet_Response& operator=(const DebugPolicySet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugPolicySet_Response& default_instance();

  void Swap(DebugPolicySet_Response* other);

  // implements Message ----------------------------------------------

  DebugPolicySet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugPolicySet_Response& from);
  void MergeFrom(const DebugPolicySet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugPolicySet.Response)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugPolicySet_Response* default_instance_;
};
// -------------------------------------------------------------------

class DebugPolicySet : public ::google::protobuf::Message {
 public:
  DebugPolicySet();
  virtual ~DebugPolicySet();

  DebugPolicySet(const DebugPolicySet& from);

  inline DebugPolicySet& operator=(const DebugPolicySet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugPolicySet& default_instance();

  void Swap(DebugPolicySet* other);

  // implements Message ----------------------------------------------

  DebugPolicySet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugPolicySet& from);
  void MergeFrom(const DebugPolicySet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DebugPolicySet_Request Request;
  typedef DebugPolicySet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugPolicySet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugPolicySet* default_instance_;
};
// -------------------------------------------------------------------

class DebugRotate_Request : public ::google::protobuf::Message {
 public:
  DebugRotate_Request();
  virtual ~DebugRotate_Request();

  DebugRotate_Request(const DebugRotate_Request& from);

  inline DebugRotate_Request& operator=(const DebugRotate_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugRotate_Request& default_instance();

  void Swap(DebugRotate_Request* other);

  // implements Message ----------------------------------------------

  DebugRotate_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugRotate_Request& from);
  void MergeFrom(const DebugRotate_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugRotate.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugRotate_Request* default_instance_;
};
// -------------------------------------------------------------------

class DebugRotate_Response : public ::google::protobuf::Message {
 public:
  DebugRotate_Response();
  virtual ~DebugRotate_Response();

  DebugRotate_Response(const DebugRotate_Response& from);

  inline DebugRotate_Response& operator=(const DebugRotate_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugRotate_Response& default_instance();

  void Swap(DebugRotate_Response* other);

  // implements Message ----------------------------------------------

  DebugRotate_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugRotate_Response& from);
  void MergeFrom(const DebugRotate_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugRotate.Response)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugRotate_Response* default_instance_;
};
// -------------------------------------------------------------------

class DebugRotate : public ::google::protobuf::Message {
 public:
  DebugRotate();
  virtual ~DebugRotate();

  DebugRotate(const DebugRotate& from);

  inline DebugRotate& operator=(const DebugRotate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugRotate& default_instance();

  void Swap(DebugRotate* other);

  // implements Message ----------------------------------------------

  DebugRotate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugRotate& from);
  void MergeFrom(const DebugRotate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DebugRotate_Request Request;
  typedef DebugRotate_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.DebugRotate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static DebugRotate* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfoGet_Request : public ::google::protobuf::Message {
 public:
  ServerInfoGet_Request();
  virtual ~ServerInfoGet_Request();

  ServerInfoGet_Request(const ServerInfoGet_Request& from);

  inline ServerInfoGet_Request& operator=(const ServerInfoGet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfoGet_Request& default_instance();

  void Swap(ServerInfoGet_Request* other);

  // implements Message ----------------------------------------------

  ServerInfoGet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfoGet_Request& from);
  void MergeFrom(const ServerInfoGet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerInfoGet.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerInfoGet_Request* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfoGet_Response : public ::google::protobuf::Message {
 public:
  ServerInfoGet_Response();
  virtual ~ServerInfoGet_Response();

  ServerInfoGet_Response(const ServerInfoGet_Response& from);

  inline ServerInfoGet_Response& operator=(const ServerInfoGet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfoGet_Response& default_instance();

  void Swap(ServerInfoGet_Response* other);

  // implements Message ----------------------------------------------

  ServerInfoGet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfoGet_Response& from);
  void MergeFrom(const ServerInfoGet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 server_id() const;
  inline void set_server_id(::google::protobuf::uint64 value);

  // optional string addresses = 2;
  inline bool has_addresses() const;
  inline void clear_addresses();
  static const int kAddressesFieldNumber = 2;
  inline const ::std::string& addresses() const;
  inline void set_addresses(const ::std::string& value);
  inline void set_addresses(const char* value);
  inline void set_addresses(const char* value, size_t size);
  inline ::std::string* mutable_addresses();
  inline ::std::string* release_addresses();
  inline void set_allocated_addresses(::std::string* addresses);

  // optional uint64 process_id = 3;
  inline bool has_process_id() const;
  inline void clear_process_id();
  static const int kProcessIdFieldNumber = 3;
  inline ::google::protobuf::uint64 process_id() const;
  inline void set_process_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerInfoGet.Response)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_addresses();
  inline void clear_has_addresses();
  inline void set_has_process_id();
  inline void clear_has_process_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 server_id_;
  ::std::string* addresses_;
  ::google::protobuf::uint64 process_id_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerInfoGet_Response* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfoGet : public ::google::protobuf::Message {
 public:
  ServerInfoGet();
  virtual ~ServerInfoGet();

  ServerInfoGet(const ServerInfoGet& from);

  inline ServerInfoGet& operator=(const ServerInfoGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfoGet& default_instance();

  void Swap(ServerInfoGet* other);

  // implements Message ----------------------------------------------

  ServerInfoGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfoGet& from);
  void MergeFrom(const ServerInfoGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerInfoGet_Request Request;
  typedef ServerInfoGet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerInfoGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerInfoGet* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatsDump_Request : public ::google::protobuf::Message {
 public:
  ServerStatsDump_Request();
  virtual ~ServerStatsDump_Request();

  ServerStatsDump_Request(const ServerStatsDump_Request& from);

  inline ServerStatsDump_Request& operator=(const ServerStatsDump_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatsDump_Request& default_instance();

  void Swap(ServerStatsDump_Request* other);

  // implements Message ----------------------------------------------

  ServerStatsDump_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatsDump_Request& from);
  void MergeFrom(const ServerStatsDump_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerStatsDump.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerStatsDump_Request* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatsDump_Response : public ::google::protobuf::Message {
 public:
  ServerStatsDump_Response();
  virtual ~ServerStatsDump_Response();

  ServerStatsDump_Response(const ServerStatsDump_Response& from);

  inline ServerStatsDump_Response& operator=(const ServerStatsDump_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatsDump_Response& default_instance();

  void Swap(ServerStatsDump_Response* other);

  // implements Message ----------------------------------------------

  ServerStatsDump_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatsDump_Response& from);
  void MergeFrom(const ServerStatsDump_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerStatsDump.Response)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerStatsDump_Response* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatsDump : public ::google::protobuf::Message {
 public:
  ServerStatsDump();
  virtual ~ServerStatsDump();

  ServerStatsDump(const ServerStatsDump& from);

  inline ServerStatsDump& operator=(const ServerStatsDump& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatsDump& default_instance();

  void Swap(ServerStatsDump* other);

  // implements Message ----------------------------------------------

  ServerStatsDump* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatsDump& from);
  void MergeFrom(const ServerStatsDump& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerStatsDump_Request Request;
  typedef ServerStatsDump_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerStatsDump)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerStatsDump* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatsGet_Request : public ::google::protobuf::Message {
 public:
  ServerStatsGet_Request();
  virtual ~ServerStatsGet_Request();

  ServerStatsGet_Request(const ServerStatsGet_Request& from);

  inline ServerStatsGet_Request& operator=(const ServerStatsGet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatsGet_Request& default_instance();

  void Swap(ServerStatsGet_Request* other);

  // implements Message ----------------------------------------------

  ServerStatsGet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatsGet_Request& from);
  void MergeFrom(const ServerStatsGet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerStatsGet.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerStatsGet_Request* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatsGet_Response : public ::google::protobuf::Message {
 public:
  ServerStatsGet_Response();
  virtual ~ServerStatsGet_Response();

  ServerStatsGet_Response(const ServerStatsGet_Response& from);

  inline ServerStatsGet_Response& operator=(const ServerStatsGet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatsGet_Response& default_instance();

  void Swap(ServerStatsGet_Response* other);

  // implements Message ----------------------------------------------

  ServerStatsGet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatsGet_Response& from);
  void MergeFrom(const ServerStatsGet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LogCabin.Protocol.ServerStats server_stats = 1;
  inline bool has_server_stats() const;
  inline void clear_server_stats();
  static const int kServerStatsFieldNumber = 1;
  inline const ::LogCabin::Protocol::ServerStats& server_stats() const;
  inline ::LogCabin::Protocol::ServerStats* mutable_server_stats();
  inline ::LogCabin::Protocol::ServerStats* release_server_stats();
  inline void set_allocated_server_stats(::LogCabin::Protocol::ServerStats* server_stats);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerStatsGet.Response)
 private:
  inline void set_has_server_stats();
  inline void clear_has_server_stats();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::LogCabin::Protocol::ServerStats* server_stats_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerStatsGet_Response* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatsGet : public ::google::protobuf::Message {
 public:
  ServerStatsGet();
  virtual ~ServerStatsGet();

  ServerStatsGet(const ServerStatsGet& from);

  inline ServerStatsGet& operator=(const ServerStatsGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatsGet& default_instance();

  void Swap(ServerStatsGet* other);

  // implements Message ----------------------------------------------

  ServerStatsGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatsGet& from);
  void MergeFrom(const ServerStatsGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerStatsGet_Request Request;
  typedef ServerStatsGet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.ServerStatsGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static ServerStatsGet* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotControl_Request : public ::google::protobuf::Message {
 public:
  SnapshotControl_Request();
  virtual ~SnapshotControl_Request();

  SnapshotControl_Request(const SnapshotControl_Request& from);

  inline SnapshotControl_Request& operator=(const SnapshotControl_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotControl_Request& default_instance();

  void Swap(SnapshotControl_Request* other);

  // implements Message ----------------------------------------------

  SnapshotControl_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotControl_Request& from);
  void MergeFrom(const SnapshotControl_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .LogCabin.Protocol.ServerControl.SnapshotCommand command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::LogCabin::Protocol::ServerControl::SnapshotCommand command() const;
  inline void set_command(::LogCabin::Protocol::ServerControl::SnapshotCommand value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotControl.Request)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int command_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotControl_Request* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotControl_Response : public ::google::protobuf::Message {
 public:
  SnapshotControl_Response();
  virtual ~SnapshotControl_Response();

  SnapshotControl_Response(const SnapshotControl_Response& from);

  inline SnapshotControl_Response& operator=(const SnapshotControl_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotControl_Response& default_instance();

  void Swap(SnapshotControl_Response* other);

  // implements Message ----------------------------------------------

  SnapshotControl_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotControl_Response& from);
  void MergeFrom(const SnapshotControl_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotControl.Response)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotControl_Response* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotControl : public ::google::protobuf::Message {
 public:
  SnapshotControl();
  virtual ~SnapshotControl();

  SnapshotControl(const SnapshotControl& from);

  inline SnapshotControl& operator=(const SnapshotControl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotControl& default_instance();

  void Swap(SnapshotControl* other);

  // implements Message ----------------------------------------------

  SnapshotControl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotControl& from);
  void MergeFrom(const SnapshotControl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SnapshotControl_Request Request;
  typedef SnapshotControl_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotControl)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotControl* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotInhibitGet_Request : public ::google::protobuf::Message {
 public:
  SnapshotInhibitGet_Request();
  virtual ~SnapshotInhibitGet_Request();

  SnapshotInhibitGet_Request(const SnapshotInhibitGet_Request& from);

  inline SnapshotInhibitGet_Request& operator=(const SnapshotInhibitGet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotInhibitGet_Request& default_instance();

  void Swap(SnapshotInhibitGet_Request* other);

  // implements Message ----------------------------------------------

  SnapshotInhibitGet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotInhibitGet_Request& from);
  void MergeFrom(const SnapshotInhibitGet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotInhibitGet.Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotInhibitGet_Request* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotInhibitGet_Response : public ::google::protobuf::Message {
 public:
  SnapshotInhibitGet_Response();
  virtual ~SnapshotInhibitGet_Response();

  SnapshotInhibitGet_Response(const SnapshotInhibitGet_Response& from);

  inline SnapshotInhibitGet_Response& operator=(const SnapshotInhibitGet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotInhibitGet_Response& default_instance();

  void Swap(SnapshotInhibitGet_Response* other);

  // implements Message ----------------------------------------------

  SnapshotInhibitGet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotInhibitGet_Response& from);
  void MergeFrom(const SnapshotInhibitGet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 nanoseconds = 1;
  inline bool has_nanoseconds() const;
  inline void clear_nanoseconds();
  static const int kNanosecondsFieldNumber = 1;
  inline ::google::protobuf::uint64 nanoseconds() const;
  inline void set_nanoseconds(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotInhibitGet.Response)
 private:
  inline void set_has_nanoseconds();
  inline void clear_has_nanoseconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 nanoseconds_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotInhibitGet_Response* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotInhibitGet : public ::google::protobuf::Message {
 public:
  SnapshotInhibitGet();
  virtual ~SnapshotInhibitGet();

  SnapshotInhibitGet(const SnapshotInhibitGet& from);

  inline SnapshotInhibitGet& operator=(const SnapshotInhibitGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotInhibitGet& default_instance();

  void Swap(SnapshotInhibitGet* other);

  // implements Message ----------------------------------------------

  SnapshotInhibitGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotInhibitGet& from);
  void MergeFrom(const SnapshotInhibitGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SnapshotInhibitGet_Request Request;
  typedef SnapshotInhibitGet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotInhibitGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotInhibitGet* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotInhibitSet_Request : public ::google::protobuf::Message {
 public:
  SnapshotInhibitSet_Request();
  virtual ~SnapshotInhibitSet_Request();

  SnapshotInhibitSet_Request(const SnapshotInhibitSet_Request& from);

  inline SnapshotInhibitSet_Request& operator=(const SnapshotInhibitSet_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotInhibitSet_Request& default_instance();

  void Swap(SnapshotInhibitSet_Request* other);

  // implements Message ----------------------------------------------

  SnapshotInhibitSet_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotInhibitSet_Request& from);
  void MergeFrom(const SnapshotInhibitSet_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 nanoseconds = 1;
  inline bool has_nanoseconds() const;
  inline void clear_nanoseconds();
  static const int kNanosecondsFieldNumber = 1;
  inline ::google::protobuf::uint64 nanoseconds() const;
  inline void set_nanoseconds(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Request)
 private:
  inline void set_has_nanoseconds();
  inline void clear_has_nanoseconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 nanoseconds_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotInhibitSet_Request* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotInhibitSet_Response : public ::google::protobuf::Message {
 public:
  SnapshotInhibitSet_Response();
  virtual ~SnapshotInhibitSet_Response();

  SnapshotInhibitSet_Response(const SnapshotInhibitSet_Response& from);

  inline SnapshotInhibitSet_Response& operator=(const SnapshotInhibitSet_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotInhibitSet_Response& default_instance();

  void Swap(SnapshotInhibitSet_Response* other);

  // implements Message ----------------------------------------------

  SnapshotInhibitSet_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotInhibitSet_Response& from);
  void MergeFrom(const SnapshotInhibitSet_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotInhibitSet_Response* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotInhibitSet : public ::google::protobuf::Message {
 public:
  SnapshotInhibitSet();
  virtual ~SnapshotInhibitSet();

  SnapshotInhibitSet(const SnapshotInhibitSet& from);

  inline SnapshotInhibitSet& operator=(const SnapshotInhibitSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotInhibitSet& default_instance();

  void Swap(SnapshotInhibitSet* other);

  // implements Message ----------------------------------------------

  SnapshotInhibitSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotInhibitSet& from);
  void MergeFrom(const SnapshotInhibitSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SnapshotInhibitSet_Request Request;
  typedef SnapshotInhibitSet_Response Response;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerControl.SnapshotInhibitSet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerControl_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerControl_2eproto();

  void InitAsDefaultInstance();
  static SnapshotInhibitSet* default_instance_;
};
// ===================================================================


// ===================================================================

// Error

// -------------------------------------------------------------------

// DebugFilenameGet_Request

// -------------------------------------------------------------------

// DebugFilenameGet_Response

// optional string filename = 1;
inline bool DebugFilenameGet_Response::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugFilenameGet_Response::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugFilenameGet_Response::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugFilenameGet_Response::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& DebugFilenameGet_Response::filename() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response.filename)
  return *filename_;
}
inline void DebugFilenameGet_Response::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response.filename)
}
inline void DebugFilenameGet_Response::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response.filename)
}
inline void DebugFilenameGet_Response::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response.filename)
}
inline ::std::string* DebugFilenameGet_Response::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response.filename)
  return filename_;
}
inline ::std::string* DebugFilenameGet_Response::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DebugFilenameGet_Response::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.DebugFilenameGet.Response.filename)
}

// -------------------------------------------------------------------

// DebugFilenameGet

// -------------------------------------------------------------------

// DebugFilenameSet_Request

// optional string filename = 1;
inline bool DebugFilenameSet_Request::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugFilenameSet_Request::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugFilenameSet_Request::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugFilenameSet_Request::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& DebugFilenameSet_Request::filename() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request.filename)
  return *filename_;
}
inline void DebugFilenameSet_Request::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request.filename)
}
inline void DebugFilenameSet_Request::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request.filename)
}
inline void DebugFilenameSet_Request::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request.filename)
}
inline ::std::string* DebugFilenameSet_Request::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request.filename)
  return filename_;
}
inline ::std::string* DebugFilenameSet_Request::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DebugFilenameSet_Request::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.DebugFilenameSet.Request.filename)
}

// -------------------------------------------------------------------

// DebugFilenameSet_Response

// optional string error = 1;
inline bool DebugFilenameSet_Response::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugFilenameSet_Response::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugFilenameSet_Response::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugFilenameSet_Response::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& DebugFilenameSet_Response::error() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response.error)
  return *error_;
}
inline void DebugFilenameSet_Response::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response.error)
}
inline void DebugFilenameSet_Response::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response.error)
}
inline void DebugFilenameSet_Response::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response.error)
}
inline ::std::string* DebugFilenameSet_Response::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response.error)
  return error_;
}
inline ::std::string* DebugFilenameSet_Response::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DebugFilenameSet_Response::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.DebugFilenameSet.Response.error)
}

// -------------------------------------------------------------------

// DebugFilenameSet

// -------------------------------------------------------------------

// DebugPolicyGet_Request

// -------------------------------------------------------------------

// DebugPolicyGet_Response

// optional string policy = 1;
inline bool DebugPolicyGet_Response::has_policy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugPolicyGet_Response::set_has_policy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugPolicyGet_Response::clear_has_policy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugPolicyGet_Response::clear_policy() {
  if (policy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_->clear();
  }
  clear_has_policy();
}
inline const ::std::string& DebugPolicyGet_Response::policy() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response.policy)
  return *policy_;
}
inline void DebugPolicyGet_Response::set_policy(const ::std::string& value) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response.policy)
}
inline void DebugPolicyGet_Response::set_policy(const char* value) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response.policy)
}
inline void DebugPolicyGet_Response::set_policy(const char* value, size_t size) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response.policy)
}
inline ::std::string* DebugPolicyGet_Response::mutable_policy() {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response.policy)
  return policy_;
}
inline ::std::string* DebugPolicyGet_Response::release_policy() {
  clear_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = policy_;
    policy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DebugPolicyGet_Response::set_allocated_policy(::std::string* policy) {
  if (policy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete policy_;
  }
  if (policy) {
    set_has_policy();
    policy_ = policy;
  } else {
    clear_has_policy();
    policy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.DebugPolicyGet.Response.policy)
}

// -------------------------------------------------------------------

// DebugPolicyGet

// -------------------------------------------------------------------

// DebugPolicySet_Request

// optional string policy = 1;
inline bool DebugPolicySet_Request::has_policy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugPolicySet_Request::set_has_policy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugPolicySet_Request::clear_has_policy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugPolicySet_Request::clear_policy() {
  if (policy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_->clear();
  }
  clear_has_policy();
}
inline const ::std::string& DebugPolicySet_Request::policy() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.DebugPolicySet.Request.policy)
  return *policy_;
}
inline void DebugPolicySet_Request::set_policy(const ::std::string& value) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.DebugPolicySet.Request.policy)
}
inline void DebugPolicySet_Request::set_policy(const char* value) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.DebugPolicySet.Request.policy)
}
inline void DebugPolicySet_Request::set_policy(const char* value, size_t size) {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  policy_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.DebugPolicySet.Request.policy)
}
inline ::std::string* DebugPolicySet_Request::mutable_policy() {
  set_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    policy_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.DebugPolicySet.Request.policy)
  return policy_;
}
inline ::std::string* DebugPolicySet_Request::release_policy() {
  clear_has_policy();
  if (policy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = policy_;
    policy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DebugPolicySet_Request::set_allocated_policy(::std::string* policy) {
  if (policy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete policy_;
  }
  if (policy) {
    set_has_policy();
    policy_ = policy;
  } else {
    clear_has_policy();
    policy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.DebugPolicySet.Request.policy)
}

// -------------------------------------------------------------------

// DebugPolicySet_Response

// -------------------------------------------------------------------

// DebugPolicySet

// -------------------------------------------------------------------

// DebugRotate_Request

// -------------------------------------------------------------------

// DebugRotate_Response

// optional string error = 1;
inline bool DebugRotate_Response::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugRotate_Response::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugRotate_Response::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugRotate_Response::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& DebugRotate_Response::error() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.DebugRotate.Response.error)
  return *error_;
}
inline void DebugRotate_Response::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.DebugRotate.Response.error)
}
inline void DebugRotate_Response::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.DebugRotate.Response.error)
}
inline void DebugRotate_Response::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.DebugRotate.Response.error)
}
inline ::std::string* DebugRotate_Response::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.DebugRotate.Response.error)
  return error_;
}
inline ::std::string* DebugRotate_Response::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DebugRotate_Response::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.DebugRotate.Response.error)
}

// -------------------------------------------------------------------

// DebugRotate

// -------------------------------------------------------------------

// ServerInfoGet_Request

// -------------------------------------------------------------------

// ServerInfoGet_Response

// optional uint64 server_id = 1;
inline bool ServerInfoGet_Response::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerInfoGet_Response::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerInfoGet_Response::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerInfoGet_Response::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 ServerInfoGet_Response::server_id() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.server_id)
  return server_id_;
}
inline void ServerInfoGet_Response::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.server_id)
}

// optional string addresses = 2;
inline bool ServerInfoGet_Response::has_addresses() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerInfoGet_Response::set_has_addresses() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerInfoGet_Response::clear_has_addresses() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerInfoGet_Response::clear_addresses() {
  if (addresses_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_->clear();
  }
  clear_has_addresses();
}
inline const ::std::string& ServerInfoGet_Response::addresses() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.addresses)
  return *addresses_;
}
inline void ServerInfoGet_Response::set_addresses(const ::std::string& value) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.addresses)
}
inline void ServerInfoGet_Response::set_addresses(const char* value) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.addresses)
}
inline void ServerInfoGet_Response::set_addresses(const char* value, size_t size) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.addresses)
}
inline ::std::string* ServerInfoGet_Response::mutable_addresses() {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.addresses)
  return addresses_;
}
inline ::std::string* ServerInfoGet_Response::release_addresses() {
  clear_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = addresses_;
    addresses_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerInfoGet_Response::set_allocated_addresses(::std::string* addresses) {
  if (addresses_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete addresses_;
  }
  if (addresses) {
    set_has_addresses();
    addresses_ = addresses;
  } else {
    clear_has_addresses();
    addresses_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.addresses)
}

// optional uint64 process_id = 3;
inline bool ServerInfoGet_Response::has_process_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerInfoGet_Response::set_has_process_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerInfoGet_Response::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerInfoGet_Response::clear_process_id() {
  process_id_ = GOOGLE_ULONGLONG(0);
  clear_has_process_id();
}
inline ::google::protobuf::uint64 ServerInfoGet_Response::process_id() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.process_id)
  return process_id_;
}
inline void ServerInfoGet_Response::set_process_id(::google::protobuf::uint64 value) {
  set_has_process_id();
  process_id_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.ServerInfoGet.Response.process_id)
}

// -------------------------------------------------------------------

// ServerInfoGet

// -------------------------------------------------------------------

// ServerStatsDump_Request

// -------------------------------------------------------------------

// ServerStatsDump_Response

// -------------------------------------------------------------------

// ServerStatsDump

// -------------------------------------------------------------------

// ServerStatsGet_Request

// -------------------------------------------------------------------

// ServerStatsGet_Response

// optional .LogCabin.Protocol.ServerStats server_stats = 1;
inline bool ServerStatsGet_Response::has_server_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStatsGet_Response::set_has_server_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStatsGet_Response::clear_has_server_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStatsGet_Response::clear_server_stats() {
  if (server_stats_ != NULL) server_stats_->::LogCabin::Protocol::ServerStats::Clear();
  clear_has_server_stats();
}
inline const ::LogCabin::Protocol::ServerStats& ServerStatsGet_Response::server_stats() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.ServerStatsGet.Response.server_stats)
  return server_stats_ != NULL ? *server_stats_ : *default_instance_->server_stats_;
}
inline ::LogCabin::Protocol::ServerStats* ServerStatsGet_Response::mutable_server_stats() {
  set_has_server_stats();
  if (server_stats_ == NULL) server_stats_ = new ::LogCabin::Protocol::ServerStats;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.ServerStatsGet.Response.server_stats)
  return server_stats_;
}
inline ::LogCabin::Protocol::ServerStats* ServerStatsGet_Response::release_server_stats() {
  clear_has_server_stats();
  ::LogCabin::Protocol::ServerStats* temp = server_stats_;
  server_stats_ = NULL;
  return temp;
}
inline void ServerStatsGet_Response::set_allocated_server_stats(::LogCabin::Protocol::ServerStats* server_stats) {
  delete server_stats_;
  server_stats_ = server_stats;
  if (server_stats) {
    set_has_server_stats();
  } else {
    clear_has_server_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.ServerStatsGet.Response.server_stats)
}

// -------------------------------------------------------------------

// ServerStatsGet

// -------------------------------------------------------------------

// SnapshotControl_Request

// required .LogCabin.Protocol.ServerControl.SnapshotCommand command = 1;
inline bool SnapshotControl_Request::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotControl_Request::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotControl_Request::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotControl_Request::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::LogCabin::Protocol::ServerControl::SnapshotCommand SnapshotControl_Request::command() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.SnapshotControl.Request.command)
  return static_cast< ::LogCabin::Protocol::ServerControl::SnapshotCommand >(command_);
}
inline void SnapshotControl_Request::set_command(::LogCabin::Protocol::ServerControl::SnapshotCommand value) {
  assert(::LogCabin::Protocol::ServerControl::SnapshotCommand_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.SnapshotControl.Request.command)
}

// -------------------------------------------------------------------

// SnapshotControl_Response

// optional string error = 1;
inline bool SnapshotControl_Response::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotControl_Response::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotControl_Response::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotControl_Response::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& SnapshotControl_Response::error() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.SnapshotControl.Response.error)
  return *error_;
}
inline void SnapshotControl_Response::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.SnapshotControl.Response.error)
}
inline void SnapshotControl_Response::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.SnapshotControl.Response.error)
}
inline void SnapshotControl_Response::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.SnapshotControl.Response.error)
}
inline ::std::string* SnapshotControl_Response::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.SnapshotControl.Response.error)
  return error_;
}
inline ::std::string* SnapshotControl_Response::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SnapshotControl_Response::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.SnapshotControl.Response.error)
}

// -------------------------------------------------------------------

// SnapshotControl

// -------------------------------------------------------------------

// SnapshotInhibitGet_Request

// -------------------------------------------------------------------

// SnapshotInhibitGet_Response

// optional uint64 nanoseconds = 1;
inline bool SnapshotInhibitGet_Response::has_nanoseconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotInhibitGet_Response::set_has_nanoseconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotInhibitGet_Response::clear_has_nanoseconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotInhibitGet_Response::clear_nanoseconds() {
  nanoseconds_ = GOOGLE_ULONGLONG(0);
  clear_has_nanoseconds();
}
inline ::google::protobuf::uint64 SnapshotInhibitGet_Response::nanoseconds() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.SnapshotInhibitGet.Response.nanoseconds)
  return nanoseconds_;
}
inline void SnapshotInhibitGet_Response::set_nanoseconds(::google::protobuf::uint64 value) {
  set_has_nanoseconds();
  nanoseconds_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.SnapshotInhibitGet.Response.nanoseconds)
}

// -------------------------------------------------------------------

// SnapshotInhibitGet

// -------------------------------------------------------------------

// SnapshotInhibitSet_Request

// optional uint64 nanoseconds = 1;
inline bool SnapshotInhibitSet_Request::has_nanoseconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotInhibitSet_Request::set_has_nanoseconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotInhibitSet_Request::clear_has_nanoseconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotInhibitSet_Request::clear_nanoseconds() {
  nanoseconds_ = GOOGLE_ULONGLONG(0);
  clear_has_nanoseconds();
}
inline ::google::protobuf::uint64 SnapshotInhibitSet_Request::nanoseconds() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Request.nanoseconds)
  return nanoseconds_;
}
inline void SnapshotInhibitSet_Request::set_nanoseconds(::google::protobuf::uint64 value) {
  set_has_nanoseconds();
  nanoseconds_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Request.nanoseconds)
}

// -------------------------------------------------------------------

// SnapshotInhibitSet_Response

// optional string error = 1;
inline bool SnapshotInhibitSet_Response::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotInhibitSet_Response::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotInhibitSet_Response::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotInhibitSet_Response::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& SnapshotInhibitSet_Response::error() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response.error)
  return *error_;
}
inline void SnapshotInhibitSet_Response::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response.error)
}
inline void SnapshotInhibitSet_Response::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response.error)
}
inline void SnapshotInhibitSet_Response::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response.error)
}
inline ::std::string* SnapshotInhibitSet_Response::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response.error)
  return error_;
}
inline ::std::string* SnapshotInhibitSet_Response::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SnapshotInhibitSet_Response::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerControl.SnapshotInhibitSet.Response.error)
}

// -------------------------------------------------------------------

// SnapshotInhibitSet


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerControl
}  // namespace Protocol
}  // namespace LogCabin

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LogCabin::Protocol::ServerControl::OpCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LogCabin::Protocol::ServerControl::OpCode>() {
  return ::LogCabin::Protocol::ServerControl::OpCode_descriptor();
}
template <> struct is_proto_enum< ::LogCabin::Protocol::ServerControl::SnapshotCommand> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LogCabin::Protocol::ServerControl::SnapshotCommand>() {
  return ::LogCabin::Protocol::ServerControl::SnapshotCommand_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Protocol_2fServer_2fServerControl_2eproto__INCLUDED
