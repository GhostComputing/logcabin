// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol/Server/ServerStats.proto

#ifndef PROTOBUF_Protocol_2fServer_2fServerStats_2eproto__INCLUDED
#define PROTOBUF_Protocol_2fServer_2fServerStats_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace LogCabin {
namespace Protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

class RollingStat;
class RollingStat_Exceptional;
class ServerStats;
class ServerStats_Raft;
class ServerStats_Raft_Peer;
class ServerStats_Storage;
class ServerStats_Tree;
class ServerStats_StateMachine;

enum ServerStats_Raft_State {
  ServerStats_Raft_State_UNKNOWN = 0,
  ServerStats_Raft_State_FOLLOWER = 1,
  ServerStats_Raft_State_CANDIDATE = 2,
  ServerStats_Raft_State_LEADER = 3
};
bool ServerStats_Raft_State_IsValid(int value);
const ServerStats_Raft_State ServerStats_Raft_State_State_MIN = ServerStats_Raft_State_UNKNOWN;
const ServerStats_Raft_State ServerStats_Raft_State_State_MAX = ServerStats_Raft_State_LEADER;
const int ServerStats_Raft_State_State_ARRAYSIZE = ServerStats_Raft_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerStats_Raft_State_descriptor();
inline const ::std::string& ServerStats_Raft_State_Name(ServerStats_Raft_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerStats_Raft_State_descriptor(), value);
}
inline bool ServerStats_Raft_State_Parse(
    const ::std::string& name, ServerStats_Raft_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerStats_Raft_State>(
    ServerStats_Raft_State_descriptor(), name, value);
}
// ===================================================================

class RollingStat_Exceptional : public ::google::protobuf::Message {
 public:
  RollingStat_Exceptional();
  virtual ~RollingStat_Exceptional();

  RollingStat_Exceptional(const RollingStat_Exceptional& from);

  inline RollingStat_Exceptional& operator=(const RollingStat_Exceptional& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RollingStat_Exceptional& default_instance();

  void Swap(RollingStat_Exceptional* other);

  // implements Message ----------------------------------------------

  RollingStat_Exceptional* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RollingStat_Exceptional& from);
  void MergeFrom(const RollingStat_Exceptional& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 when = 1;
  inline bool has_when() const;
  inline void clear_when();
  static const int kWhenFieldNumber = 1;
  inline ::google::protobuf::int64 when() const;
  inline void set_when(::google::protobuf::int64 value);

  // optional uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.RollingStat.Exceptional)
 private:
  inline void set_has_when();
  inline void clear_has_when();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 when_;
  ::google::protobuf::uint64 value_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static RollingStat_Exceptional* default_instance_;
};
// -------------------------------------------------------------------

class RollingStat : public ::google::protobuf::Message {
 public:
  RollingStat();
  virtual ~RollingStat();

  RollingStat(const RollingStat& from);

  inline RollingStat& operator=(const RollingStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RollingStat& default_instance();

  void Swap(RollingStat* other);

  // implements Message ----------------------------------------------

  RollingStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RollingStat& from);
  void MergeFrom(const RollingStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RollingStat_Exceptional Exceptional;

  // accessors -------------------------------------------------------

  // optional double average = 1;
  inline bool has_average() const;
  inline void clear_average();
  static const int kAverageFieldNumber = 1;
  inline double average() const;
  inline void set_average(double value);

  // optional uint64 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint64 count() const;
  inline void set_count(::google::protobuf::uint64 value);

  // optional double ewma2 = 3;
  inline bool has_ewma2() const;
  inline void clear_ewma2();
  static const int kEwma2FieldNumber = 3;
  inline double ewma2() const;
  inline void set_ewma2(double value);

  // optional double ewma4 = 4;
  inline bool has_ewma4() const;
  inline void clear_ewma4();
  static const int kEwma4FieldNumber = 4;
  inline double ewma4() const;
  inline void set_ewma4(double value);

  // optional uint64 exceptional_count = 5;
  inline bool has_exceptional_count() const;
  inline void clear_exceptional_count();
  static const int kExceptionalCountFieldNumber = 5;
  inline ::google::protobuf::uint64 exceptional_count() const;
  inline void set_exceptional_count(::google::protobuf::uint64 value);

  // optional uint64 last = 6;
  inline bool has_last() const;
  inline void clear_last();
  static const int kLastFieldNumber = 6;
  inline ::google::protobuf::uint64 last() const;
  inline void set_last(::google::protobuf::uint64 value);

  // optional uint64 min = 7;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 7;
  inline ::google::protobuf::uint64 min() const;
  inline void set_min(::google::protobuf::uint64 value);

  // optional uint64 max = 8;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 8;
  inline ::google::protobuf::uint64 max() const;
  inline void set_max(::google::protobuf::uint64 value);

  // optional uint64 sum = 9;
  inline bool has_sum() const;
  inline void clear_sum();
  static const int kSumFieldNumber = 9;
  inline ::google::protobuf::uint64 sum() const;
  inline void set_sum(::google::protobuf::uint64 value);

  // optional double stddev = 10;
  inline bool has_stddev() const;
  inline void clear_stddev();
  static const int kStddevFieldNumber = 10;
  inline double stddev() const;
  inline void set_stddev(double value);

  // repeated .LogCabin.Protocol.RollingStat.Exceptional last_exceptional = 11;
  inline int last_exceptional_size() const;
  inline void clear_last_exceptional();
  static const int kLastExceptionalFieldNumber = 11;
  inline const ::LogCabin::Protocol::RollingStat_Exceptional& last_exceptional(int index) const;
  inline ::LogCabin::Protocol::RollingStat_Exceptional* mutable_last_exceptional(int index);
  inline ::LogCabin::Protocol::RollingStat_Exceptional* add_last_exceptional();
  inline const ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::RollingStat_Exceptional >&
      last_exceptional() const;
  inline ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::RollingStat_Exceptional >*
      mutable_last_exceptional();

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.RollingStat)
 private:
  inline void set_has_average();
  inline void clear_has_average();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_ewma2();
  inline void clear_has_ewma2();
  inline void set_has_ewma4();
  inline void clear_has_ewma4();
  inline void set_has_exceptional_count();
  inline void clear_has_exceptional_count();
  inline void set_has_last();
  inline void clear_has_last();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_sum();
  inline void clear_has_sum();
  inline void set_has_stddev();
  inline void clear_has_stddev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double average_;
  ::google::protobuf::uint64 count_;
  double ewma2_;
  double ewma4_;
  ::google::protobuf::uint64 exceptional_count_;
  ::google::protobuf::uint64 last_;
  ::google::protobuf::uint64 min_;
  ::google::protobuf::uint64 max_;
  ::google::protobuf::uint64 sum_;
  double stddev_;
  ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::RollingStat_Exceptional > last_exceptional_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static RollingStat* default_instance_;
};
// -------------------------------------------------------------------

class ServerStats_Raft_Peer : public ::google::protobuf::Message {
 public:
  ServerStats_Raft_Peer();
  virtual ~ServerStats_Raft_Peer();

  ServerStats_Raft_Peer(const ServerStats_Raft_Peer& from);

  inline ServerStats_Raft_Peer& operator=(const ServerStats_Raft_Peer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStats_Raft_Peer& default_instance();

  void Swap(ServerStats_Raft_Peer* other);

  // implements Message ----------------------------------------------

  ServerStats_Raft_Peer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStats_Raft_Peer& from);
  void MergeFrom(const ServerStats_Raft_Peer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 server_id() const;
  inline void set_server_id(::google::protobuf::uint64 value);

  // optional string addresses = 2;
  inline bool has_addresses() const;
  inline void clear_addresses();
  static const int kAddressesFieldNumber = 2;
  inline const ::std::string& addresses() const;
  inline void set_addresses(const ::std::string& value);
  inline void set_addresses(const char* value);
  inline void set_addresses(const char* value, size_t size);
  inline ::std::string* mutable_addresses();
  inline ::std::string* release_addresses();
  inline void set_allocated_addresses(::std::string* addresses);

  // optional bool old_member = 21;
  inline bool has_old_member() const;
  inline void clear_old_member();
  static const int kOldMemberFieldNumber = 21;
  inline bool old_member() const;
  inline void set_old_member(bool value);

  // optional bool new_member = 22;
  inline bool has_new_member() const;
  inline void clear_new_member();
  static const int kNewMemberFieldNumber = 22;
  inline bool new_member() const;
  inline void set_new_member(bool value);

  // optional bool staging_member = 23;
  inline bool has_staging_member() const;
  inline void clear_staging_member();
  static const int kStagingMemberFieldNumber = 23;
  inline bool staging_member() const;
  inline void set_staging_member(bool value);

  // optional uint64 last_synced_index = 31;
  inline bool has_last_synced_index() const;
  inline void clear_last_synced_index();
  static const int kLastSyncedIndexFieldNumber = 31;
  inline ::google::protobuf::uint64 last_synced_index() const;
  inline void set_last_synced_index(::google::protobuf::uint64 value);

  // optional bool request_vote_done = 41;
  inline bool has_request_vote_done() const;
  inline void clear_request_vote_done();
  static const int kRequestVoteDoneFieldNumber = 41;
  inline bool request_vote_done() const;
  inline void set_request_vote_done(bool value);

  // optional bool have_vote = 42;
  inline bool has_have_vote() const;
  inline void clear_have_vote();
  static const int kHaveVoteFieldNumber = 42;
  inline bool have_vote() const;
  inline void set_have_vote(bool value);

  // optional bool suppress_bulk_data = 43;
  inline bool has_suppress_bulk_data() const;
  inline void clear_suppress_bulk_data();
  static const int kSuppressBulkDataFieldNumber = 43;
  inline bool suppress_bulk_data() const;
  inline void set_suppress_bulk_data(bool value);

  // optional uint64 next_index = 44;
  inline bool has_next_index() const;
  inline void clear_next_index();
  static const int kNextIndexFieldNumber = 44;
  inline ::google::protobuf::uint64 next_index() const;
  inline void set_next_index(::google::protobuf::uint64 value);

  // optional uint64 last_agree_index = 45;
  inline bool has_last_agree_index() const;
  inline void clear_last_agree_index();
  static const int kLastAgreeIndexFieldNumber = 45;
  inline ::google::protobuf::uint64 last_agree_index() const;
  inline void set_last_agree_index(::google::protobuf::uint64 value);

  // optional bool is_caught_up = 46;
  inline bool has_is_caught_up() const;
  inline void clear_is_caught_up();
  static const int kIsCaughtUpFieldNumber = 46;
  inline bool is_caught_up() const;
  inline void set_is_caught_up(bool value);

  // optional int64 next_heartbeat_at = 51;
  inline bool has_next_heartbeat_at() const;
  inline void clear_next_heartbeat_at();
  static const int kNextHeartbeatAtFieldNumber = 51;
  inline ::google::protobuf::int64 next_heartbeat_at() const;
  inline void set_next_heartbeat_at(::google::protobuf::int64 value);

  // optional int64 backoff_until = 52;
  inline bool has_backoff_until() const;
  inline void clear_backoff_until();
  static const int kBackoffUntilFieldNumber = 52;
  inline ::google::protobuf::int64 backoff_until() const;
  inline void set_backoff_until(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerStats.Raft.Peer)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_addresses();
  inline void clear_has_addresses();
  inline void set_has_old_member();
  inline void clear_has_old_member();
  inline void set_has_new_member();
  inline void clear_has_new_member();
  inline void set_has_staging_member();
  inline void clear_has_staging_member();
  inline void set_has_last_synced_index();
  inline void clear_has_last_synced_index();
  inline void set_has_request_vote_done();
  inline void clear_has_request_vote_done();
  inline void set_has_have_vote();
  inline void clear_has_have_vote();
  inline void set_has_suppress_bulk_data();
  inline void clear_has_suppress_bulk_data();
  inline void set_has_next_index();
  inline void clear_has_next_index();
  inline void set_has_last_agree_index();
  inline void clear_has_last_agree_index();
  inline void set_has_is_caught_up();
  inline void clear_has_is_caught_up();
  inline void set_has_next_heartbeat_at();
  inline void clear_has_next_heartbeat_at();
  inline void set_has_backoff_until();
  inline void clear_has_backoff_until();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 server_id_;
  ::std::string* addresses_;
  ::google::protobuf::uint64 last_synced_index_;
  bool old_member_;
  bool new_member_;
  bool staging_member_;
  bool request_vote_done_;
  bool have_vote_;
  bool suppress_bulk_data_;
  bool is_caught_up_;
  ::google::protobuf::uint64 next_index_;
  ::google::protobuf::uint64 last_agree_index_;
  ::google::protobuf::int64 next_heartbeat_at_;
  ::google::protobuf::int64 backoff_until_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static ServerStats_Raft_Peer* default_instance_;
};
// -------------------------------------------------------------------

class ServerStats_Raft : public ::google::protobuf::Message {
 public:
  ServerStats_Raft();
  virtual ~ServerStats_Raft();

  ServerStats_Raft(const ServerStats_Raft& from);

  inline ServerStats_Raft& operator=(const ServerStats_Raft& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStats_Raft& default_instance();

  void Swap(ServerStats_Raft* other);

  // implements Message ----------------------------------------------

  ServerStats_Raft* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStats_Raft& from);
  void MergeFrom(const ServerStats_Raft& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerStats_Raft_Peer Peer;

  typedef ServerStats_Raft_State State;
  static const State UNKNOWN = ServerStats_Raft_State_UNKNOWN;
  static const State FOLLOWER = ServerStats_Raft_State_FOLLOWER;
  static const State CANDIDATE = ServerStats_Raft_State_CANDIDATE;
  static const State LEADER = ServerStats_Raft_State_LEADER;
  static inline bool State_IsValid(int value) {
    return ServerStats_Raft_State_IsValid(value);
  }
  static const State State_MIN =
    ServerStats_Raft_State_State_MIN;
  static const State State_MAX =
    ServerStats_Raft_State_State_MAX;
  static const int State_ARRAYSIZE =
    ServerStats_Raft_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return ServerStats_Raft_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return ServerStats_Raft_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return ServerStats_Raft_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 current_term = 11;
  inline bool has_current_term() const;
  inline void clear_current_term();
  static const int kCurrentTermFieldNumber = 11;
  inline ::google::protobuf::uint64 current_term() const;
  inline void set_current_term(::google::protobuf::uint64 value);

  // optional .LogCabin.Protocol.ServerStats.Raft.State state = 12;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 12;
  inline ::LogCabin::Protocol::ServerStats_Raft_State state() const;
  inline void set_state(::LogCabin::Protocol::ServerStats_Raft_State value);

  // optional uint64 commit_index = 13;
  inline bool has_commit_index() const;
  inline void clear_commit_index();
  static const int kCommitIndexFieldNumber = 13;
  inline ::google::protobuf::uint64 commit_index() const;
  inline void set_commit_index(::google::protobuf::uint64 value);

  // optional uint64 last_log_index = 14;
  inline bool has_last_log_index() const;
  inline void clear_last_log_index();
  static const int kLastLogIndexFieldNumber = 14;
  inline ::google::protobuf::uint64 last_log_index() const;
  inline void set_last_log_index(::google::protobuf::uint64 value);

  // optional uint64 leader_id = 15;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 15;
  inline ::google::protobuf::uint64 leader_id() const;
  inline void set_leader_id(::google::protobuf::uint64 value);

  // optional uint64 voted_for = 16;
  inline bool has_voted_for() const;
  inline void clear_voted_for();
  static const int kVotedForFieldNumber = 16;
  inline ::google::protobuf::uint64 voted_for() const;
  inline void set_voted_for(::google::protobuf::uint64 value);

  // optional int64 start_election_at = 21;
  inline bool has_start_election_at() const;
  inline void clear_start_election_at();
  static const int kStartElectionAtFieldNumber = 21;
  inline ::google::protobuf::int64 start_election_at() const;
  inline void set_start_election_at(::google::protobuf::int64 value);

  // optional int64 withhold_votes_until = 22;
  inline bool has_withhold_votes_until() const;
  inline void clear_withhold_votes_until();
  static const int kWithholdVotesUntilFieldNumber = 22;
  inline ::google::protobuf::int64 withhold_votes_until() const;
  inline void set_withhold_votes_until(::google::protobuf::int64 value);

  // optional uint64 cluster_time = 23;
  inline bool has_cluster_time() const;
  inline void clear_cluster_time();
  static const int kClusterTimeFieldNumber = 23;
  inline ::google::protobuf::uint64 cluster_time() const;
  inline void set_cluster_time(::google::protobuf::uint64 value);

  // optional uint64 cluster_time_epoch = 24;
  inline bool has_cluster_time_epoch() const;
  inline void clear_cluster_time_epoch();
  static const int kClusterTimeEpochFieldNumber = 24;
  inline ::google::protobuf::uint64 cluster_time_epoch() const;
  inline void set_cluster_time_epoch(::google::protobuf::uint64 value);

  // optional uint64 last_snapshot_index = 31;
  inline bool has_last_snapshot_index() const;
  inline void clear_last_snapshot_index();
  static const int kLastSnapshotIndexFieldNumber = 31;
  inline ::google::protobuf::uint64 last_snapshot_index() const;
  inline void set_last_snapshot_index(::google::protobuf::uint64 value);

  // optional uint64 last_snapshot_bytes = 32;
  inline bool has_last_snapshot_bytes() const;
  inline void clear_last_snapshot_bytes();
  static const int kLastSnapshotBytesFieldNumber = 32;
  inline ::google::protobuf::uint64 last_snapshot_bytes() const;
  inline void set_last_snapshot_bytes(::google::protobuf::uint64 value);

  // optional uint64 last_snapshot_term = 35;
  inline bool has_last_snapshot_term() const;
  inline void clear_last_snapshot_term();
  static const int kLastSnapshotTermFieldNumber = 35;
  inline ::google::protobuf::uint64 last_snapshot_term() const;
  inline void set_last_snapshot_term(::google::protobuf::uint64 value);

  // optional uint64 last_snapshot_cluster_time = 36;
  inline bool has_last_snapshot_cluster_time() const;
  inline void clear_last_snapshot_cluster_time();
  static const int kLastSnapshotClusterTimeFieldNumber = 36;
  inline ::google::protobuf::uint64 last_snapshot_cluster_time() const;
  inline void set_last_snapshot_cluster_time(::google::protobuf::uint64 value);

  // optional uint64 log_start_index = 33;
  inline bool has_log_start_index() const;
  inline void clear_log_start_index();
  static const int kLogStartIndexFieldNumber = 33;
  inline ::google::protobuf::uint64 log_start_index() const;
  inline void set_log_start_index(::google::protobuf::uint64 value);

  // optional uint64 log_bytes = 34;
  inline bool has_log_bytes() const;
  inline void clear_log_bytes();
  static const int kLogBytesFieldNumber = 34;
  inline ::google::protobuf::uint64 log_bytes() const;
  inline void set_log_bytes(::google::protobuf::uint64 value);

  // optional uint64 num_entries_truncated = 37;
  inline bool has_num_entries_truncated() const;
  inline void clear_num_entries_truncated();
  static const int kNumEntriesTruncatedFieldNumber = 37;
  inline ::google::protobuf::uint64 num_entries_truncated() const;
  inline void set_num_entries_truncated(::google::protobuf::uint64 value);

  // repeated .LogCabin.Protocol.ServerStats.Raft.Peer peer = 91;
  inline int peer_size() const;
  inline void clear_peer();
  static const int kPeerFieldNumber = 91;
  inline const ::LogCabin::Protocol::ServerStats_Raft_Peer& peer(int index) const;
  inline ::LogCabin::Protocol::ServerStats_Raft_Peer* mutable_peer(int index);
  inline ::LogCabin::Protocol::ServerStats_Raft_Peer* add_peer();
  inline const ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::ServerStats_Raft_Peer >&
      peer() const;
  inline ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::ServerStats_Raft_Peer >*
      mutable_peer();

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerStats.Raft)
 private:
  inline void set_has_current_term();
  inline void clear_has_current_term();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_commit_index();
  inline void clear_has_commit_index();
  inline void set_has_last_log_index();
  inline void clear_has_last_log_index();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_voted_for();
  inline void clear_has_voted_for();
  inline void set_has_start_election_at();
  inline void clear_has_start_election_at();
  inline void set_has_withhold_votes_until();
  inline void clear_has_withhold_votes_until();
  inline void set_has_cluster_time();
  inline void clear_has_cluster_time();
  inline void set_has_cluster_time_epoch();
  inline void clear_has_cluster_time_epoch();
  inline void set_has_last_snapshot_index();
  inline void clear_has_last_snapshot_index();
  inline void set_has_last_snapshot_bytes();
  inline void clear_has_last_snapshot_bytes();
  inline void set_has_last_snapshot_term();
  inline void clear_has_last_snapshot_term();
  inline void set_has_last_snapshot_cluster_time();
  inline void clear_has_last_snapshot_cluster_time();
  inline void set_has_log_start_index();
  inline void clear_has_log_start_index();
  inline void set_has_log_bytes();
  inline void clear_has_log_bytes();
  inline void set_has_num_entries_truncated();
  inline void clear_has_num_entries_truncated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 current_term_;
  ::google::protobuf::uint64 commit_index_;
  ::google::protobuf::uint64 last_log_index_;
  ::google::protobuf::uint64 leader_id_;
  ::google::protobuf::uint64 voted_for_;
  ::google::protobuf::int64 start_election_at_;
  ::google::protobuf::int64 withhold_votes_until_;
  ::google::protobuf::uint64 cluster_time_;
  ::google::protobuf::uint64 cluster_time_epoch_;
  ::google::protobuf::uint64 last_snapshot_index_;
  ::google::protobuf::uint64 last_snapshot_bytes_;
  ::google::protobuf::uint64 last_snapshot_term_;
  ::google::protobuf::uint64 last_snapshot_cluster_time_;
  ::google::protobuf::uint64 log_start_index_;
  ::google::protobuf::uint64 log_bytes_;
  ::google::protobuf::uint64 num_entries_truncated_;
  ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::ServerStats_Raft_Peer > peer_;
  int state_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static ServerStats_Raft* default_instance_;
};
// -------------------------------------------------------------------

class ServerStats_Storage : public ::google::protobuf::Message {
 public:
  ServerStats_Storage();
  virtual ~ServerStats_Storage();

  ServerStats_Storage(const ServerStats_Storage& from);

  inline ServerStats_Storage& operator=(const ServerStats_Storage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStats_Storage& default_instance();

  void Swap(ServerStats_Storage* other);

  // implements Message ----------------------------------------------

  ServerStats_Storage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStats_Storage& from);
  void MergeFrom(const ServerStats_Storage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 num_segments = 1;
  inline bool has_num_segments() const;
  inline void clear_num_segments();
  static const int kNumSegmentsFieldNumber = 1;
  inline ::google::protobuf::uint64 num_segments() const;
  inline void set_num_segments(::google::protobuf::uint64 value);

  // optional uint64 open_segment_bytes = 2;
  inline bool has_open_segment_bytes() const;
  inline void clear_open_segment_bytes();
  static const int kOpenSegmentBytesFieldNumber = 2;
  inline ::google::protobuf::uint64 open_segment_bytes() const;
  inline void set_open_segment_bytes(::google::protobuf::uint64 value);

  // optional uint64 metadata_version = 3;
  inline bool has_metadata_version() const;
  inline void clear_metadata_version();
  static const int kMetadataVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 metadata_version() const;
  inline void set_metadata_version(::google::protobuf::uint64 value);

  // optional .LogCabin.Protocol.RollingStat metadata_write_nanos = 4;
  inline bool has_metadata_write_nanos() const;
  inline void clear_metadata_write_nanos();
  static const int kMetadataWriteNanosFieldNumber = 4;
  inline const ::LogCabin::Protocol::RollingStat& metadata_write_nanos() const;
  inline ::LogCabin::Protocol::RollingStat* mutable_metadata_write_nanos();
  inline ::LogCabin::Protocol::RollingStat* release_metadata_write_nanos();
  inline void set_allocated_metadata_write_nanos(::LogCabin::Protocol::RollingStat* metadata_write_nanos);

  // optional .LogCabin.Protocol.RollingStat filesystem_ops_nanos = 5;
  inline bool has_filesystem_ops_nanos() const;
  inline void clear_filesystem_ops_nanos();
  static const int kFilesystemOpsNanosFieldNumber = 5;
  inline const ::LogCabin::Protocol::RollingStat& filesystem_ops_nanos() const;
  inline ::LogCabin::Protocol::RollingStat* mutable_filesystem_ops_nanos();
  inline ::LogCabin::Protocol::RollingStat* release_filesystem_ops_nanos();
  inline void set_allocated_filesystem_ops_nanos(::LogCabin::Protocol::RollingStat* filesystem_ops_nanos);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerStats.Storage)
 private:
  inline void set_has_num_segments();
  inline void clear_has_num_segments();
  inline void set_has_open_segment_bytes();
  inline void clear_has_open_segment_bytes();
  inline void set_has_metadata_version();
  inline void clear_has_metadata_version();
  inline void set_has_metadata_write_nanos();
  inline void clear_has_metadata_write_nanos();
  inline void set_has_filesystem_ops_nanos();
  inline void clear_has_filesystem_ops_nanos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 num_segments_;
  ::google::protobuf::uint64 open_segment_bytes_;
  ::google::protobuf::uint64 metadata_version_;
  ::LogCabin::Protocol::RollingStat* metadata_write_nanos_;
  ::LogCabin::Protocol::RollingStat* filesystem_ops_nanos_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static ServerStats_Storage* default_instance_;
};
// -------------------------------------------------------------------

class ServerStats_Tree : public ::google::protobuf::Message {
 public:
  ServerStats_Tree();
  virtual ~ServerStats_Tree();

  ServerStats_Tree(const ServerStats_Tree& from);

  inline ServerStats_Tree& operator=(const ServerStats_Tree& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStats_Tree& default_instance();

  void Swap(ServerStats_Tree* other);

  // implements Message ----------------------------------------------

  ServerStats_Tree* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStats_Tree& from);
  void MergeFrom(const ServerStats_Tree& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 num_conditions_checked = 1;
  inline bool has_num_conditions_checked() const;
  inline void clear_num_conditions_checked();
  static const int kNumConditionsCheckedFieldNumber = 1;
  inline ::google::protobuf::uint64 num_conditions_checked() const;
  inline void set_num_conditions_checked(::google::protobuf::uint64 value);

  // optional uint64 num_conditions_failed = 2;
  inline bool has_num_conditions_failed() const;
  inline void clear_num_conditions_failed();
  static const int kNumConditionsFailedFieldNumber = 2;
  inline ::google::protobuf::uint64 num_conditions_failed() const;
  inline void set_num_conditions_failed(::google::protobuf::uint64 value);

  // optional uint64 num_make_directory_attempted = 3;
  inline bool has_num_make_directory_attempted() const;
  inline void clear_num_make_directory_attempted();
  static const int kNumMakeDirectoryAttemptedFieldNumber = 3;
  inline ::google::protobuf::uint64 num_make_directory_attempted() const;
  inline void set_num_make_directory_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_make_directory_success = 4;
  inline bool has_num_make_directory_success() const;
  inline void clear_num_make_directory_success();
  static const int kNumMakeDirectorySuccessFieldNumber = 4;
  inline ::google::protobuf::uint64 num_make_directory_success() const;
  inline void set_num_make_directory_success(::google::protobuf::uint64 value);

  // optional uint64 num_list_directory_attempted = 5;
  inline bool has_num_list_directory_attempted() const;
  inline void clear_num_list_directory_attempted();
  static const int kNumListDirectoryAttemptedFieldNumber = 5;
  inline ::google::protobuf::uint64 num_list_directory_attempted() const;
  inline void set_num_list_directory_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_list_directory_success = 6;
  inline bool has_num_list_directory_success() const;
  inline void clear_num_list_directory_success();
  static const int kNumListDirectorySuccessFieldNumber = 6;
  inline ::google::protobuf::uint64 num_list_directory_success() const;
  inline void set_num_list_directory_success(::google::protobuf::uint64 value);

  // optional uint64 num_remove_directory_attempted = 7;
  inline bool has_num_remove_directory_attempted() const;
  inline void clear_num_remove_directory_attempted();
  static const int kNumRemoveDirectoryAttemptedFieldNumber = 7;
  inline ::google::protobuf::uint64 num_remove_directory_attempted() const;
  inline void set_num_remove_directory_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_remove_directory_parent_not_found = 8;
  inline bool has_num_remove_directory_parent_not_found() const;
  inline void clear_num_remove_directory_parent_not_found();
  static const int kNumRemoveDirectoryParentNotFoundFieldNumber = 8;
  inline ::google::protobuf::uint64 num_remove_directory_parent_not_found() const;
  inline void set_num_remove_directory_parent_not_found(::google::protobuf::uint64 value);

  // optional uint64 num_remove_directory_target_not_found = 9;
  inline bool has_num_remove_directory_target_not_found() const;
  inline void clear_num_remove_directory_target_not_found();
  static const int kNumRemoveDirectoryTargetNotFoundFieldNumber = 9;
  inline ::google::protobuf::uint64 num_remove_directory_target_not_found() const;
  inline void set_num_remove_directory_target_not_found(::google::protobuf::uint64 value);

  // optional uint64 num_remove_directory_done = 10;
  inline bool has_num_remove_directory_done() const;
  inline void clear_num_remove_directory_done();
  static const int kNumRemoveDirectoryDoneFieldNumber = 10;
  inline ::google::protobuf::uint64 num_remove_directory_done() const;
  inline void set_num_remove_directory_done(::google::protobuf::uint64 value);

  // optional uint64 num_remove_directory_success = 11;
  inline bool has_num_remove_directory_success() const;
  inline void clear_num_remove_directory_success();
  static const int kNumRemoveDirectorySuccessFieldNumber = 11;
  inline ::google::protobuf::uint64 num_remove_directory_success() const;
  inline void set_num_remove_directory_success(::google::protobuf::uint64 value);

  // optional uint64 num_write_attempted = 12;
  inline bool has_num_write_attempted() const;
  inline void clear_num_write_attempted();
  static const int kNumWriteAttemptedFieldNumber = 12;
  inline ::google::protobuf::uint64 num_write_attempted() const;
  inline void set_num_write_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_write_success = 13;
  inline bool has_num_write_success() const;
  inline void clear_num_write_success();
  static const int kNumWriteSuccessFieldNumber = 13;
  inline ::google::protobuf::uint64 num_write_success() const;
  inline void set_num_write_success(::google::protobuf::uint64 value);

  // optional uint64 num_read_attempted = 14;
  inline bool has_num_read_attempted() const;
  inline void clear_num_read_attempted();
  static const int kNumReadAttemptedFieldNumber = 14;
  inline ::google::protobuf::uint64 num_read_attempted() const;
  inline void set_num_read_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_read_success = 15;
  inline bool has_num_read_success() const;
  inline void clear_num_read_success();
  static const int kNumReadSuccessFieldNumber = 15;
  inline ::google::protobuf::uint64 num_read_success() const;
  inline void set_num_read_success(::google::protobuf::uint64 value);

  // optional uint64 num_remove_file_attempted = 16;
  inline bool has_num_remove_file_attempted() const;
  inline void clear_num_remove_file_attempted();
  static const int kNumRemoveFileAttemptedFieldNumber = 16;
  inline ::google::protobuf::uint64 num_remove_file_attempted() const;
  inline void set_num_remove_file_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_remove_file_parent_not_found = 17;
  inline bool has_num_remove_file_parent_not_found() const;
  inline void clear_num_remove_file_parent_not_found();
  static const int kNumRemoveFileParentNotFoundFieldNumber = 17;
  inline ::google::protobuf::uint64 num_remove_file_parent_not_found() const;
  inline void set_num_remove_file_parent_not_found(::google::protobuf::uint64 value);

  // optional uint64 num_remove_file_target_not_found = 18;
  inline bool has_num_remove_file_target_not_found() const;
  inline void clear_num_remove_file_target_not_found();
  static const int kNumRemoveFileTargetNotFoundFieldNumber = 18;
  inline ::google::protobuf::uint64 num_remove_file_target_not_found() const;
  inline void set_num_remove_file_target_not_found(::google::protobuf::uint64 value);

  // optional uint64 num_remove_file_done = 19;
  inline bool has_num_remove_file_done() const;
  inline void clear_num_remove_file_done();
  static const int kNumRemoveFileDoneFieldNumber = 19;
  inline ::google::protobuf::uint64 num_remove_file_done() const;
  inline void set_num_remove_file_done(::google::protobuf::uint64 value);

  // optional uint64 num_remove_file_success = 20;
  inline bool has_num_remove_file_success() const;
  inline void clear_num_remove_file_success();
  static const int kNumRemoveFileSuccessFieldNumber = 20;
  inline ::google::protobuf::uint64 num_remove_file_success() const;
  inline void set_num_remove_file_success(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerStats.Tree)
 private:
  inline void set_has_num_conditions_checked();
  inline void clear_has_num_conditions_checked();
  inline void set_has_num_conditions_failed();
  inline void clear_has_num_conditions_failed();
  inline void set_has_num_make_directory_attempted();
  inline void clear_has_num_make_directory_attempted();
  inline void set_has_num_make_directory_success();
  inline void clear_has_num_make_directory_success();
  inline void set_has_num_list_directory_attempted();
  inline void clear_has_num_list_directory_attempted();
  inline void set_has_num_list_directory_success();
  inline void clear_has_num_list_directory_success();
  inline void set_has_num_remove_directory_attempted();
  inline void clear_has_num_remove_directory_attempted();
  inline void set_has_num_remove_directory_parent_not_found();
  inline void clear_has_num_remove_directory_parent_not_found();
  inline void set_has_num_remove_directory_target_not_found();
  inline void clear_has_num_remove_directory_target_not_found();
  inline void set_has_num_remove_directory_done();
  inline void clear_has_num_remove_directory_done();
  inline void set_has_num_remove_directory_success();
  inline void clear_has_num_remove_directory_success();
  inline void set_has_num_write_attempted();
  inline void clear_has_num_write_attempted();
  inline void set_has_num_write_success();
  inline void clear_has_num_write_success();
  inline void set_has_num_read_attempted();
  inline void clear_has_num_read_attempted();
  inline void set_has_num_read_success();
  inline void clear_has_num_read_success();
  inline void set_has_num_remove_file_attempted();
  inline void clear_has_num_remove_file_attempted();
  inline void set_has_num_remove_file_parent_not_found();
  inline void clear_has_num_remove_file_parent_not_found();
  inline void set_has_num_remove_file_target_not_found();
  inline void clear_has_num_remove_file_target_not_found();
  inline void set_has_num_remove_file_done();
  inline void clear_has_num_remove_file_done();
  inline void set_has_num_remove_file_success();
  inline void clear_has_num_remove_file_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 num_conditions_checked_;
  ::google::protobuf::uint64 num_conditions_failed_;
  ::google::protobuf::uint64 num_make_directory_attempted_;
  ::google::protobuf::uint64 num_make_directory_success_;
  ::google::protobuf::uint64 num_list_directory_attempted_;
  ::google::protobuf::uint64 num_list_directory_success_;
  ::google::protobuf::uint64 num_remove_directory_attempted_;
  ::google::protobuf::uint64 num_remove_directory_parent_not_found_;
  ::google::protobuf::uint64 num_remove_directory_target_not_found_;
  ::google::protobuf::uint64 num_remove_directory_done_;
  ::google::protobuf::uint64 num_remove_directory_success_;
  ::google::protobuf::uint64 num_write_attempted_;
  ::google::protobuf::uint64 num_write_success_;
  ::google::protobuf::uint64 num_read_attempted_;
  ::google::protobuf::uint64 num_read_success_;
  ::google::protobuf::uint64 num_remove_file_attempted_;
  ::google::protobuf::uint64 num_remove_file_parent_not_found_;
  ::google::protobuf::uint64 num_remove_file_target_not_found_;
  ::google::protobuf::uint64 num_remove_file_done_;
  ::google::protobuf::uint64 num_remove_file_success_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static ServerStats_Tree* default_instance_;
};
// -------------------------------------------------------------------

class ServerStats_StateMachine : public ::google::protobuf::Message {
 public:
  ServerStats_StateMachine();
  virtual ~ServerStats_StateMachine();

  ServerStats_StateMachine(const ServerStats_StateMachine& from);

  inline ServerStats_StateMachine& operator=(const ServerStats_StateMachine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStats_StateMachine& default_instance();

  void Swap(ServerStats_StateMachine* other);

  // implements Message ----------------------------------------------

  ServerStats_StateMachine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStats_StateMachine& from);
  void MergeFrom(const ServerStats_StateMachine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool snapshotting = 1;
  inline bool has_snapshotting() const;
  inline void clear_snapshotting();
  static const int kSnapshottingFieldNumber = 1;
  inline bool snapshotting() const;
  inline void set_snapshotting(bool value);

  // optional uint64 last_applied = 2;
  inline bool has_last_applied() const;
  inline void clear_last_applied();
  static const int kLastAppliedFieldNumber = 2;
  inline ::google::protobuf::uint64 last_applied() const;
  inline void set_last_applied(::google::protobuf::uint64 value);

  // optional uint64 num_sessions = 3;
  inline bool has_num_sessions() const;
  inline void clear_num_sessions();
  static const int kNumSessionsFieldNumber = 3;
  inline ::google::protobuf::uint64 num_sessions() const;
  inline void set_num_sessions(::google::protobuf::uint64 value);

  // optional uint64 num_snapshots_attempted = 4;
  inline bool has_num_snapshots_attempted() const;
  inline void clear_num_snapshots_attempted();
  static const int kNumSnapshotsAttemptedFieldNumber = 4;
  inline ::google::protobuf::uint64 num_snapshots_attempted() const;
  inline void set_num_snapshots_attempted(::google::protobuf::uint64 value);

  // optional uint64 num_snapshots_failed = 5;
  inline bool has_num_snapshots_failed() const;
  inline void clear_num_snapshots_failed();
  static const int kNumSnapshotsFailedFieldNumber = 5;
  inline ::google::protobuf::uint64 num_snapshots_failed() const;
  inline void set_num_snapshots_failed(::google::protobuf::uint64 value);

  // optional uint64 num_redundant_advance_version_entries = 6;
  inline bool has_num_redundant_advance_version_entries() const;
  inline void clear_num_redundant_advance_version_entries();
  static const int kNumRedundantAdvanceVersionEntriesFieldNumber = 6;
  inline ::google::protobuf::uint64 num_redundant_advance_version_entries() const;
  inline void set_num_redundant_advance_version_entries(::google::protobuf::uint64 value);

  // optional uint64 num_rejected_advance_version_entries = 7;
  inline bool has_num_rejected_advance_version_entries() const;
  inline void clear_num_rejected_advance_version_entries();
  static const int kNumRejectedAdvanceVersionEntriesFieldNumber = 7;
  inline ::google::protobuf::uint64 num_rejected_advance_version_entries() const;
  inline void set_num_rejected_advance_version_entries(::google::protobuf::uint64 value);

  // optional uint64 num_successful_advance_version_entries = 8;
  inline bool has_num_successful_advance_version_entries() const;
  inline void clear_num_successful_advance_version_entries();
  static const int kNumSuccessfulAdvanceVersionEntriesFieldNumber = 8;
  inline ::google::protobuf::uint64 num_successful_advance_version_entries() const;
  inline void set_num_successful_advance_version_entries(::google::protobuf::uint64 value);

  // optional uint64 num_total_advance_version_entries = 9;
  inline bool has_num_total_advance_version_entries() const;
  inline void clear_num_total_advance_version_entries();
  static const int kNumTotalAdvanceVersionEntriesFieldNumber = 9;
  inline ::google::protobuf::uint64 num_total_advance_version_entries() const;
  inline void set_num_total_advance_version_entries(::google::protobuf::uint64 value);

  // optional uint32 min_supported_version = 10;
  inline bool has_min_supported_version() const;
  inline void clear_min_supported_version();
  static const int kMinSupportedVersionFieldNumber = 10;
  inline ::google::protobuf::uint32 min_supported_version() const;
  inline void set_min_supported_version(::google::protobuf::uint32 value);

  // optional uint32 max_supported_version = 11;
  inline bool has_max_supported_version() const;
  inline void clear_max_supported_version();
  static const int kMaxSupportedVersionFieldNumber = 11;
  inline ::google::protobuf::uint32 max_supported_version() const;
  inline void set_max_supported_version(::google::protobuf::uint32 value);

  // optional uint32 running_version = 12;
  inline bool has_running_version() const;
  inline void clear_running_version();
  static const int kRunningVersionFieldNumber = 12;
  inline ::google::protobuf::uint32 running_version() const;
  inline void set_running_version(::google::protobuf::uint32 value);

  // optional .LogCabin.Protocol.ServerStats.Tree tree = 13;
  inline bool has_tree() const;
  inline void clear_tree();
  static const int kTreeFieldNumber = 13;
  inline const ::LogCabin::Protocol::ServerStats_Tree& tree() const;
  inline ::LogCabin::Protocol::ServerStats_Tree* mutable_tree();
  inline ::LogCabin::Protocol::ServerStats_Tree* release_tree();
  inline void set_allocated_tree(::LogCabin::Protocol::ServerStats_Tree* tree);

  // optional uint64 num_unknown_requests = 14;
  inline bool has_num_unknown_requests() const;
  inline void clear_num_unknown_requests();
  static const int kNumUnknownRequestsFieldNumber = 14;
  inline ::google::protobuf::uint64 num_unknown_requests() const;
  inline void set_num_unknown_requests(::google::protobuf::uint64 value);

  // optional int64 may_snapshot_at = 15;
  inline bool has_may_snapshot_at() const;
  inline void clear_may_snapshot_at();
  static const int kMaySnapshotAtFieldNumber = 15;
  inline ::google::protobuf::int64 may_snapshot_at() const;
  inline void set_may_snapshot_at(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerStats.StateMachine)
 private:
  inline void set_has_snapshotting();
  inline void clear_has_snapshotting();
  inline void set_has_last_applied();
  inline void clear_has_last_applied();
  inline void set_has_num_sessions();
  inline void clear_has_num_sessions();
  inline void set_has_num_snapshots_attempted();
  inline void clear_has_num_snapshots_attempted();
  inline void set_has_num_snapshots_failed();
  inline void clear_has_num_snapshots_failed();
  inline void set_has_num_redundant_advance_version_entries();
  inline void clear_has_num_redundant_advance_version_entries();
  inline void set_has_num_rejected_advance_version_entries();
  inline void clear_has_num_rejected_advance_version_entries();
  inline void set_has_num_successful_advance_version_entries();
  inline void clear_has_num_successful_advance_version_entries();
  inline void set_has_num_total_advance_version_entries();
  inline void clear_has_num_total_advance_version_entries();
  inline void set_has_min_supported_version();
  inline void clear_has_min_supported_version();
  inline void set_has_max_supported_version();
  inline void clear_has_max_supported_version();
  inline void set_has_running_version();
  inline void clear_has_running_version();
  inline void set_has_tree();
  inline void clear_has_tree();
  inline void set_has_num_unknown_requests();
  inline void clear_has_num_unknown_requests();
  inline void set_has_may_snapshot_at();
  inline void clear_has_may_snapshot_at();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 last_applied_;
  ::google::protobuf::uint64 num_sessions_;
  ::google::protobuf::uint64 num_snapshots_attempted_;
  ::google::protobuf::uint64 num_snapshots_failed_;
  bool snapshotting_;
  ::google::protobuf::uint32 min_supported_version_;
  ::google::protobuf::uint64 num_redundant_advance_version_entries_;
  ::google::protobuf::uint64 num_rejected_advance_version_entries_;
  ::google::protobuf::uint64 num_successful_advance_version_entries_;
  ::google::protobuf::uint64 num_total_advance_version_entries_;
  ::google::protobuf::uint32 max_supported_version_;
  ::google::protobuf::uint32 running_version_;
  ::LogCabin::Protocol::ServerStats_Tree* tree_;
  ::google::protobuf::uint64 num_unknown_requests_;
  ::google::protobuf::int64 may_snapshot_at_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static ServerStats_StateMachine* default_instance_;
};
// -------------------------------------------------------------------

class ServerStats : public ::google::protobuf::Message {
 public:
  ServerStats();
  virtual ~ServerStats();

  ServerStats(const ServerStats& from);

  inline ServerStats& operator=(const ServerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStats& default_instance();

  void Swap(ServerStats* other);

  // implements Message ----------------------------------------------

  ServerStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStats& from);
  void MergeFrom(const ServerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerStats_Raft Raft;
  typedef ServerStats_Storage Storage;
  typedef ServerStats_Tree Tree;
  typedef ServerStats_StateMachine StateMachine;

  // accessors -------------------------------------------------------

  // optional uint64 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 server_id() const;
  inline void set_server_id(::google::protobuf::uint64 value);

  // optional string addresses = 2;
  inline bool has_addresses() const;
  inline void clear_addresses();
  static const int kAddressesFieldNumber = 2;
  inline const ::std::string& addresses() const;
  inline void set_addresses(const ::std::string& value);
  inline void set_addresses(const char* value);
  inline void set_addresses(const char* value, size_t size);
  inline ::std::string* mutable_addresses();
  inline ::std::string* release_addresses();
  inline void set_allocated_addresses(::std::string* addresses);

  // optional int64 start_at = 3;
  inline bool has_start_at() const;
  inline void clear_start_at();
  static const int kStartAtFieldNumber = 3;
  inline ::google::protobuf::int64 start_at() const;
  inline void set_start_at(::google::protobuf::int64 value);

  // optional int64 end_at = 4;
  inline bool has_end_at() const;
  inline void clear_end_at();
  static const int kEndAtFieldNumber = 4;
  inline ::google::protobuf::int64 end_at() const;
  inline void set_end_at(::google::protobuf::int64 value);

  // optional .LogCabin.Protocol.ServerStats.Raft raft = 11;
  inline bool has_raft() const;
  inline void clear_raft();
  static const int kRaftFieldNumber = 11;
  inline const ::LogCabin::Protocol::ServerStats_Raft& raft() const;
  inline ::LogCabin::Protocol::ServerStats_Raft* mutable_raft();
  inline ::LogCabin::Protocol::ServerStats_Raft* release_raft();
  inline void set_allocated_raft(::LogCabin::Protocol::ServerStats_Raft* raft);

  // optional .LogCabin.Protocol.ServerStats.Storage storage = 12;
  inline bool has_storage() const;
  inline void clear_storage();
  static const int kStorageFieldNumber = 12;
  inline const ::LogCabin::Protocol::ServerStats_Storage& storage() const;
  inline ::LogCabin::Protocol::ServerStats_Storage* mutable_storage();
  inline ::LogCabin::Protocol::ServerStats_Storage* release_storage();
  inline void set_allocated_storage(::LogCabin::Protocol::ServerStats_Storage* storage);

  // optional .LogCabin.Protocol.ServerStats.StateMachine state_machine = 13;
  inline bool has_state_machine() const;
  inline void clear_state_machine();
  static const int kStateMachineFieldNumber = 13;
  inline const ::LogCabin::Protocol::ServerStats_StateMachine& state_machine() const;
  inline ::LogCabin::Protocol::ServerStats_StateMachine* mutable_state_machine();
  inline ::LogCabin::Protocol::ServerStats_StateMachine* release_state_machine();
  inline void set_allocated_state_machine(::LogCabin::Protocol::ServerStats_StateMachine* state_machine);

  // @@protoc_insertion_point(class_scope:LogCabin.Protocol.ServerStats)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_addresses();
  inline void clear_has_addresses();
  inline void set_has_start_at();
  inline void clear_has_start_at();
  inline void set_has_end_at();
  inline void clear_has_end_at();
  inline void set_has_raft();
  inline void clear_has_raft();
  inline void set_has_storage();
  inline void clear_has_storage();
  inline void set_has_state_machine();
  inline void clear_has_state_machine();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 server_id_;
  ::std::string* addresses_;
  ::google::protobuf::int64 start_at_;
  ::google::protobuf::int64 end_at_;
  ::LogCabin::Protocol::ServerStats_Raft* raft_;
  ::LogCabin::Protocol::ServerStats_Storage* storage_;
  ::LogCabin::Protocol::ServerStats_StateMachine* state_machine_;
  friend void  protobuf_AddDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_AssignDesc_Protocol_2fServer_2fServerStats_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2fServer_2fServerStats_2eproto();

  void InitAsDefaultInstance();
  static ServerStats* default_instance_;
};
// ===================================================================


// ===================================================================

// RollingStat_Exceptional

// optional int64 when = 1;
inline bool RollingStat_Exceptional::has_when() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RollingStat_Exceptional::set_has_when() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RollingStat_Exceptional::clear_has_when() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RollingStat_Exceptional::clear_when() {
  when_ = GOOGLE_LONGLONG(0);
  clear_has_when();
}
inline ::google::protobuf::int64 RollingStat_Exceptional::when() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.Exceptional.when)
  return when_;
}
inline void RollingStat_Exceptional::set_when(::google::protobuf::int64 value) {
  set_has_when();
  when_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.Exceptional.when)
}

// optional uint64 value = 2;
inline bool RollingStat_Exceptional::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RollingStat_Exceptional::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RollingStat_Exceptional::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RollingStat_Exceptional::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 RollingStat_Exceptional::value() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.Exceptional.value)
  return value_;
}
inline void RollingStat_Exceptional::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.Exceptional.value)
}

// -------------------------------------------------------------------

// RollingStat

// optional double average = 1;
inline bool RollingStat::has_average() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RollingStat::set_has_average() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RollingStat::clear_has_average() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RollingStat::clear_average() {
  average_ = 0;
  clear_has_average();
}
inline double RollingStat::average() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.average)
  return average_;
}
inline void RollingStat::set_average(double value) {
  set_has_average();
  average_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.average)
}

// optional uint64 count = 2;
inline bool RollingStat::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RollingStat::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RollingStat::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RollingStat::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::uint64 RollingStat::count() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.count)
  return count_;
}
inline void RollingStat::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.count)
}

// optional double ewma2 = 3;
inline bool RollingStat::has_ewma2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RollingStat::set_has_ewma2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RollingStat::clear_has_ewma2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RollingStat::clear_ewma2() {
  ewma2_ = 0;
  clear_has_ewma2();
}
inline double RollingStat::ewma2() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.ewma2)
  return ewma2_;
}
inline void RollingStat::set_ewma2(double value) {
  set_has_ewma2();
  ewma2_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.ewma2)
}

// optional double ewma4 = 4;
inline bool RollingStat::has_ewma4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RollingStat::set_has_ewma4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RollingStat::clear_has_ewma4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RollingStat::clear_ewma4() {
  ewma4_ = 0;
  clear_has_ewma4();
}
inline double RollingStat::ewma4() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.ewma4)
  return ewma4_;
}
inline void RollingStat::set_ewma4(double value) {
  set_has_ewma4();
  ewma4_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.ewma4)
}

// optional uint64 exceptional_count = 5;
inline bool RollingStat::has_exceptional_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RollingStat::set_has_exceptional_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RollingStat::clear_has_exceptional_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RollingStat::clear_exceptional_count() {
  exceptional_count_ = GOOGLE_ULONGLONG(0);
  clear_has_exceptional_count();
}
inline ::google::protobuf::uint64 RollingStat::exceptional_count() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.exceptional_count)
  return exceptional_count_;
}
inline void RollingStat::set_exceptional_count(::google::protobuf::uint64 value) {
  set_has_exceptional_count();
  exceptional_count_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.exceptional_count)
}

// optional uint64 last = 6;
inline bool RollingStat::has_last() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RollingStat::set_has_last() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RollingStat::clear_has_last() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RollingStat::clear_last() {
  last_ = GOOGLE_ULONGLONG(0);
  clear_has_last();
}
inline ::google::protobuf::uint64 RollingStat::last() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.last)
  return last_;
}
inline void RollingStat::set_last(::google::protobuf::uint64 value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.last)
}

// optional uint64 min = 7;
inline bool RollingStat::has_min() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RollingStat::set_has_min() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RollingStat::clear_has_min() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RollingStat::clear_min() {
  min_ = GOOGLE_ULONGLONG(0);
  clear_has_min();
}
inline ::google::protobuf::uint64 RollingStat::min() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.min)
  return min_;
}
inline void RollingStat::set_min(::google::protobuf::uint64 value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.min)
}

// optional uint64 max = 8;
inline bool RollingStat::has_max() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RollingStat::set_has_max() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RollingStat::clear_has_max() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RollingStat::clear_max() {
  max_ = GOOGLE_ULONGLONG(0);
  clear_has_max();
}
inline ::google::protobuf::uint64 RollingStat::max() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.max)
  return max_;
}
inline void RollingStat::set_max(::google::protobuf::uint64 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.max)
}

// optional uint64 sum = 9;
inline bool RollingStat::has_sum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RollingStat::set_has_sum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RollingStat::clear_has_sum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RollingStat::clear_sum() {
  sum_ = GOOGLE_ULONGLONG(0);
  clear_has_sum();
}
inline ::google::protobuf::uint64 RollingStat::sum() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.sum)
  return sum_;
}
inline void RollingStat::set_sum(::google::protobuf::uint64 value) {
  set_has_sum();
  sum_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.sum)
}

// optional double stddev = 10;
inline bool RollingStat::has_stddev() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RollingStat::set_has_stddev() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RollingStat::clear_has_stddev() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RollingStat::clear_stddev() {
  stddev_ = 0;
  clear_has_stddev();
}
inline double RollingStat::stddev() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.stddev)
  return stddev_;
}
inline void RollingStat::set_stddev(double value) {
  set_has_stddev();
  stddev_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.RollingStat.stddev)
}

// repeated .LogCabin.Protocol.RollingStat.Exceptional last_exceptional = 11;
inline int RollingStat::last_exceptional_size() const {
  return last_exceptional_.size();
}
inline void RollingStat::clear_last_exceptional() {
  last_exceptional_.Clear();
}
inline const ::LogCabin::Protocol::RollingStat_Exceptional& RollingStat::last_exceptional(int index) const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.RollingStat.last_exceptional)
  return last_exceptional_.Get(index);
}
inline ::LogCabin::Protocol::RollingStat_Exceptional* RollingStat::mutable_last_exceptional(int index) {
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.RollingStat.last_exceptional)
  return last_exceptional_.Mutable(index);
}
inline ::LogCabin::Protocol::RollingStat_Exceptional* RollingStat::add_last_exceptional() {
  // @@protoc_insertion_point(field_add:LogCabin.Protocol.RollingStat.last_exceptional)
  return last_exceptional_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::RollingStat_Exceptional >&
RollingStat::last_exceptional() const {
  // @@protoc_insertion_point(field_list:LogCabin.Protocol.RollingStat.last_exceptional)
  return last_exceptional_;
}
inline ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::RollingStat_Exceptional >*
RollingStat::mutable_last_exceptional() {
  // @@protoc_insertion_point(field_mutable_list:LogCabin.Protocol.RollingStat.last_exceptional)
  return &last_exceptional_;
}

// -------------------------------------------------------------------

// ServerStats_Raft_Peer

// optional uint64 server_id = 1;
inline bool ServerStats_Raft_Peer::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStats_Raft_Peer::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStats_Raft_Peer::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 ServerStats_Raft_Peer::server_id() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.server_id)
  return server_id_;
}
inline void ServerStats_Raft_Peer::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.server_id)
}

// optional string addresses = 2;
inline bool ServerStats_Raft_Peer::has_addresses() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_addresses() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStats_Raft_Peer::clear_has_addresses() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStats_Raft_Peer::clear_addresses() {
  if (addresses_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_->clear();
  }
  clear_has_addresses();
}
inline const ::std::string& ServerStats_Raft_Peer::addresses() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.addresses)
  return *addresses_;
}
inline void ServerStats_Raft_Peer::set_addresses(const ::std::string& value) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.addresses)
}
inline void ServerStats_Raft_Peer::set_addresses(const char* value) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerStats.Raft.Peer.addresses)
}
inline void ServerStats_Raft_Peer::set_addresses(const char* value, size_t size) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerStats.Raft.Peer.addresses)
}
inline ::std::string* ServerStats_Raft_Peer::mutable_addresses() {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.Raft.Peer.addresses)
  return addresses_;
}
inline ::std::string* ServerStats_Raft_Peer::release_addresses() {
  clear_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = addresses_;
    addresses_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerStats_Raft_Peer::set_allocated_addresses(::std::string* addresses) {
  if (addresses_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete addresses_;
  }
  if (addresses) {
    set_has_addresses();
    addresses_ = addresses;
  } else {
    clear_has_addresses();
    addresses_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.Raft.Peer.addresses)
}

// optional bool old_member = 21;
inline bool ServerStats_Raft_Peer::has_old_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_old_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStats_Raft_Peer::clear_has_old_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStats_Raft_Peer::clear_old_member() {
  old_member_ = false;
  clear_has_old_member();
}
inline bool ServerStats_Raft_Peer::old_member() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.old_member)
  return old_member_;
}
inline void ServerStats_Raft_Peer::set_old_member(bool value) {
  set_has_old_member();
  old_member_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.old_member)
}

// optional bool new_member = 22;
inline bool ServerStats_Raft_Peer::has_new_member() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_new_member() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStats_Raft_Peer::clear_has_new_member() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStats_Raft_Peer::clear_new_member() {
  new_member_ = false;
  clear_has_new_member();
}
inline bool ServerStats_Raft_Peer::new_member() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.new_member)
  return new_member_;
}
inline void ServerStats_Raft_Peer::set_new_member(bool value) {
  set_has_new_member();
  new_member_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.new_member)
}

// optional bool staging_member = 23;
inline bool ServerStats_Raft_Peer::has_staging_member() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_staging_member() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStats_Raft_Peer::clear_has_staging_member() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStats_Raft_Peer::clear_staging_member() {
  staging_member_ = false;
  clear_has_staging_member();
}
inline bool ServerStats_Raft_Peer::staging_member() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.staging_member)
  return staging_member_;
}
inline void ServerStats_Raft_Peer::set_staging_member(bool value) {
  set_has_staging_member();
  staging_member_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.staging_member)
}

// optional uint64 last_synced_index = 31;
inline bool ServerStats_Raft_Peer::has_last_synced_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_last_synced_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerStats_Raft_Peer::clear_has_last_synced_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerStats_Raft_Peer::clear_last_synced_index() {
  last_synced_index_ = GOOGLE_ULONGLONG(0);
  clear_has_last_synced_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft_Peer::last_synced_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.last_synced_index)
  return last_synced_index_;
}
inline void ServerStats_Raft_Peer::set_last_synced_index(::google::protobuf::uint64 value) {
  set_has_last_synced_index();
  last_synced_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.last_synced_index)
}

// optional bool request_vote_done = 41;
inline bool ServerStats_Raft_Peer::has_request_vote_done() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_request_vote_done() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerStats_Raft_Peer::clear_has_request_vote_done() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerStats_Raft_Peer::clear_request_vote_done() {
  request_vote_done_ = false;
  clear_has_request_vote_done();
}
inline bool ServerStats_Raft_Peer::request_vote_done() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.request_vote_done)
  return request_vote_done_;
}
inline void ServerStats_Raft_Peer::set_request_vote_done(bool value) {
  set_has_request_vote_done();
  request_vote_done_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.request_vote_done)
}

// optional bool have_vote = 42;
inline bool ServerStats_Raft_Peer::has_have_vote() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_have_vote() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServerStats_Raft_Peer::clear_has_have_vote() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServerStats_Raft_Peer::clear_have_vote() {
  have_vote_ = false;
  clear_has_have_vote();
}
inline bool ServerStats_Raft_Peer::have_vote() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.have_vote)
  return have_vote_;
}
inline void ServerStats_Raft_Peer::set_have_vote(bool value) {
  set_has_have_vote();
  have_vote_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.have_vote)
}

// optional bool suppress_bulk_data = 43;
inline bool ServerStats_Raft_Peer::has_suppress_bulk_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_suppress_bulk_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServerStats_Raft_Peer::clear_has_suppress_bulk_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServerStats_Raft_Peer::clear_suppress_bulk_data() {
  suppress_bulk_data_ = false;
  clear_has_suppress_bulk_data();
}
inline bool ServerStats_Raft_Peer::suppress_bulk_data() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.suppress_bulk_data)
  return suppress_bulk_data_;
}
inline void ServerStats_Raft_Peer::set_suppress_bulk_data(bool value) {
  set_has_suppress_bulk_data();
  suppress_bulk_data_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.suppress_bulk_data)
}

// optional uint64 next_index = 44;
inline bool ServerStats_Raft_Peer::has_next_index() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_next_index() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServerStats_Raft_Peer::clear_has_next_index() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServerStats_Raft_Peer::clear_next_index() {
  next_index_ = GOOGLE_ULONGLONG(0);
  clear_has_next_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft_Peer::next_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.next_index)
  return next_index_;
}
inline void ServerStats_Raft_Peer::set_next_index(::google::protobuf::uint64 value) {
  set_has_next_index();
  next_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.next_index)
}

// optional uint64 last_agree_index = 45;
inline bool ServerStats_Raft_Peer::has_last_agree_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_last_agree_index() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServerStats_Raft_Peer::clear_has_last_agree_index() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServerStats_Raft_Peer::clear_last_agree_index() {
  last_agree_index_ = GOOGLE_ULONGLONG(0);
  clear_has_last_agree_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft_Peer::last_agree_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.last_agree_index)
  return last_agree_index_;
}
inline void ServerStats_Raft_Peer::set_last_agree_index(::google::protobuf::uint64 value) {
  set_has_last_agree_index();
  last_agree_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.last_agree_index)
}

// optional bool is_caught_up = 46;
inline bool ServerStats_Raft_Peer::has_is_caught_up() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_is_caught_up() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ServerStats_Raft_Peer::clear_has_is_caught_up() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ServerStats_Raft_Peer::clear_is_caught_up() {
  is_caught_up_ = false;
  clear_has_is_caught_up();
}
inline bool ServerStats_Raft_Peer::is_caught_up() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.is_caught_up)
  return is_caught_up_;
}
inline void ServerStats_Raft_Peer::set_is_caught_up(bool value) {
  set_has_is_caught_up();
  is_caught_up_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.is_caught_up)
}

// optional int64 next_heartbeat_at = 51;
inline bool ServerStats_Raft_Peer::has_next_heartbeat_at() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_next_heartbeat_at() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ServerStats_Raft_Peer::clear_has_next_heartbeat_at() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ServerStats_Raft_Peer::clear_next_heartbeat_at() {
  next_heartbeat_at_ = GOOGLE_LONGLONG(0);
  clear_has_next_heartbeat_at();
}
inline ::google::protobuf::int64 ServerStats_Raft_Peer::next_heartbeat_at() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.next_heartbeat_at)
  return next_heartbeat_at_;
}
inline void ServerStats_Raft_Peer::set_next_heartbeat_at(::google::protobuf::int64 value) {
  set_has_next_heartbeat_at();
  next_heartbeat_at_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.next_heartbeat_at)
}

// optional int64 backoff_until = 52;
inline bool ServerStats_Raft_Peer::has_backoff_until() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ServerStats_Raft_Peer::set_has_backoff_until() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ServerStats_Raft_Peer::clear_has_backoff_until() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ServerStats_Raft_Peer::clear_backoff_until() {
  backoff_until_ = GOOGLE_LONGLONG(0);
  clear_has_backoff_until();
}
inline ::google::protobuf::int64 ServerStats_Raft_Peer::backoff_until() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.Peer.backoff_until)
  return backoff_until_;
}
inline void ServerStats_Raft_Peer::set_backoff_until(::google::protobuf::int64 value) {
  set_has_backoff_until();
  backoff_until_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.Peer.backoff_until)
}

// -------------------------------------------------------------------

// ServerStats_Raft

// optional uint64 current_term = 11;
inline bool ServerStats_Raft::has_current_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStats_Raft::set_has_current_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStats_Raft::clear_has_current_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStats_Raft::clear_current_term() {
  current_term_ = GOOGLE_ULONGLONG(0);
  clear_has_current_term();
}
inline ::google::protobuf::uint64 ServerStats_Raft::current_term() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.current_term)
  return current_term_;
}
inline void ServerStats_Raft::set_current_term(::google::protobuf::uint64 value) {
  set_has_current_term();
  current_term_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.current_term)
}

// optional .LogCabin.Protocol.ServerStats.Raft.State state = 12;
inline bool ServerStats_Raft::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStats_Raft::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStats_Raft::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStats_Raft::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::LogCabin::Protocol::ServerStats_Raft_State ServerStats_Raft::state() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.state)
  return static_cast< ::LogCabin::Protocol::ServerStats_Raft_State >(state_);
}
inline void ServerStats_Raft::set_state(::LogCabin::Protocol::ServerStats_Raft_State value) {
  assert(::LogCabin::Protocol::ServerStats_Raft_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.state)
}

// optional uint64 commit_index = 13;
inline bool ServerStats_Raft::has_commit_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStats_Raft::set_has_commit_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStats_Raft::clear_has_commit_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStats_Raft::clear_commit_index() {
  commit_index_ = GOOGLE_ULONGLONG(0);
  clear_has_commit_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft::commit_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.commit_index)
  return commit_index_;
}
inline void ServerStats_Raft::set_commit_index(::google::protobuf::uint64 value) {
  set_has_commit_index();
  commit_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.commit_index)
}

// optional uint64 last_log_index = 14;
inline bool ServerStats_Raft::has_last_log_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStats_Raft::set_has_last_log_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStats_Raft::clear_has_last_log_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStats_Raft::clear_last_log_index() {
  last_log_index_ = GOOGLE_ULONGLONG(0);
  clear_has_last_log_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft::last_log_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.last_log_index)
  return last_log_index_;
}
inline void ServerStats_Raft::set_last_log_index(::google::protobuf::uint64 value) {
  set_has_last_log_index();
  last_log_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.last_log_index)
}

// optional uint64 leader_id = 15;
inline bool ServerStats_Raft::has_leader_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStats_Raft::set_has_leader_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStats_Raft::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStats_Raft::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::uint64 ServerStats_Raft::leader_id() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.leader_id)
  return leader_id_;
}
inline void ServerStats_Raft::set_leader_id(::google::protobuf::uint64 value) {
  set_has_leader_id();
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.leader_id)
}

// optional uint64 voted_for = 16;
inline bool ServerStats_Raft::has_voted_for() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerStats_Raft::set_has_voted_for() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerStats_Raft::clear_has_voted_for() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerStats_Raft::clear_voted_for() {
  voted_for_ = GOOGLE_ULONGLONG(0);
  clear_has_voted_for();
}
inline ::google::protobuf::uint64 ServerStats_Raft::voted_for() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.voted_for)
  return voted_for_;
}
inline void ServerStats_Raft::set_voted_for(::google::protobuf::uint64 value) {
  set_has_voted_for();
  voted_for_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.voted_for)
}

// optional int64 start_election_at = 21;
inline bool ServerStats_Raft::has_start_election_at() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerStats_Raft::set_has_start_election_at() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerStats_Raft::clear_has_start_election_at() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerStats_Raft::clear_start_election_at() {
  start_election_at_ = GOOGLE_LONGLONG(0);
  clear_has_start_election_at();
}
inline ::google::protobuf::int64 ServerStats_Raft::start_election_at() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.start_election_at)
  return start_election_at_;
}
inline void ServerStats_Raft::set_start_election_at(::google::protobuf::int64 value) {
  set_has_start_election_at();
  start_election_at_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.start_election_at)
}

// optional int64 withhold_votes_until = 22;
inline bool ServerStats_Raft::has_withhold_votes_until() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServerStats_Raft::set_has_withhold_votes_until() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServerStats_Raft::clear_has_withhold_votes_until() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServerStats_Raft::clear_withhold_votes_until() {
  withhold_votes_until_ = GOOGLE_LONGLONG(0);
  clear_has_withhold_votes_until();
}
inline ::google::protobuf::int64 ServerStats_Raft::withhold_votes_until() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.withhold_votes_until)
  return withhold_votes_until_;
}
inline void ServerStats_Raft::set_withhold_votes_until(::google::protobuf::int64 value) {
  set_has_withhold_votes_until();
  withhold_votes_until_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.withhold_votes_until)
}

// optional uint64 cluster_time = 23;
inline bool ServerStats_Raft::has_cluster_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServerStats_Raft::set_has_cluster_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServerStats_Raft::clear_has_cluster_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServerStats_Raft::clear_cluster_time() {
  cluster_time_ = GOOGLE_ULONGLONG(0);
  clear_has_cluster_time();
}
inline ::google::protobuf::uint64 ServerStats_Raft::cluster_time() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.cluster_time)
  return cluster_time_;
}
inline void ServerStats_Raft::set_cluster_time(::google::protobuf::uint64 value) {
  set_has_cluster_time();
  cluster_time_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.cluster_time)
}

// optional uint64 cluster_time_epoch = 24;
inline bool ServerStats_Raft::has_cluster_time_epoch() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServerStats_Raft::set_has_cluster_time_epoch() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServerStats_Raft::clear_has_cluster_time_epoch() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServerStats_Raft::clear_cluster_time_epoch() {
  cluster_time_epoch_ = GOOGLE_ULONGLONG(0);
  clear_has_cluster_time_epoch();
}
inline ::google::protobuf::uint64 ServerStats_Raft::cluster_time_epoch() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.cluster_time_epoch)
  return cluster_time_epoch_;
}
inline void ServerStats_Raft::set_cluster_time_epoch(::google::protobuf::uint64 value) {
  set_has_cluster_time_epoch();
  cluster_time_epoch_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.cluster_time_epoch)
}

// optional uint64 last_snapshot_index = 31;
inline bool ServerStats_Raft::has_last_snapshot_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServerStats_Raft::set_has_last_snapshot_index() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServerStats_Raft::clear_has_last_snapshot_index() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServerStats_Raft::clear_last_snapshot_index() {
  last_snapshot_index_ = GOOGLE_ULONGLONG(0);
  clear_has_last_snapshot_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft::last_snapshot_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.last_snapshot_index)
  return last_snapshot_index_;
}
inline void ServerStats_Raft::set_last_snapshot_index(::google::protobuf::uint64 value) {
  set_has_last_snapshot_index();
  last_snapshot_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.last_snapshot_index)
}

// optional uint64 last_snapshot_bytes = 32;
inline bool ServerStats_Raft::has_last_snapshot_bytes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ServerStats_Raft::set_has_last_snapshot_bytes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ServerStats_Raft::clear_has_last_snapshot_bytes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ServerStats_Raft::clear_last_snapshot_bytes() {
  last_snapshot_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_last_snapshot_bytes();
}
inline ::google::protobuf::uint64 ServerStats_Raft::last_snapshot_bytes() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.last_snapshot_bytes)
  return last_snapshot_bytes_;
}
inline void ServerStats_Raft::set_last_snapshot_bytes(::google::protobuf::uint64 value) {
  set_has_last_snapshot_bytes();
  last_snapshot_bytes_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.last_snapshot_bytes)
}

// optional uint64 last_snapshot_term = 35;
inline bool ServerStats_Raft::has_last_snapshot_term() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ServerStats_Raft::set_has_last_snapshot_term() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ServerStats_Raft::clear_has_last_snapshot_term() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ServerStats_Raft::clear_last_snapshot_term() {
  last_snapshot_term_ = GOOGLE_ULONGLONG(0);
  clear_has_last_snapshot_term();
}
inline ::google::protobuf::uint64 ServerStats_Raft::last_snapshot_term() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.last_snapshot_term)
  return last_snapshot_term_;
}
inline void ServerStats_Raft::set_last_snapshot_term(::google::protobuf::uint64 value) {
  set_has_last_snapshot_term();
  last_snapshot_term_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.last_snapshot_term)
}

// optional uint64 last_snapshot_cluster_time = 36;
inline bool ServerStats_Raft::has_last_snapshot_cluster_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ServerStats_Raft::set_has_last_snapshot_cluster_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ServerStats_Raft::clear_has_last_snapshot_cluster_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ServerStats_Raft::clear_last_snapshot_cluster_time() {
  last_snapshot_cluster_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_snapshot_cluster_time();
}
inline ::google::protobuf::uint64 ServerStats_Raft::last_snapshot_cluster_time() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.last_snapshot_cluster_time)
  return last_snapshot_cluster_time_;
}
inline void ServerStats_Raft::set_last_snapshot_cluster_time(::google::protobuf::uint64 value) {
  set_has_last_snapshot_cluster_time();
  last_snapshot_cluster_time_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.last_snapshot_cluster_time)
}

// optional uint64 log_start_index = 33;
inline bool ServerStats_Raft::has_log_start_index() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ServerStats_Raft::set_has_log_start_index() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ServerStats_Raft::clear_has_log_start_index() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ServerStats_Raft::clear_log_start_index() {
  log_start_index_ = GOOGLE_ULONGLONG(0);
  clear_has_log_start_index();
}
inline ::google::protobuf::uint64 ServerStats_Raft::log_start_index() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.log_start_index)
  return log_start_index_;
}
inline void ServerStats_Raft::set_log_start_index(::google::protobuf::uint64 value) {
  set_has_log_start_index();
  log_start_index_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.log_start_index)
}

// optional uint64 log_bytes = 34;
inline bool ServerStats_Raft::has_log_bytes() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ServerStats_Raft::set_has_log_bytes() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ServerStats_Raft::clear_has_log_bytes() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ServerStats_Raft::clear_log_bytes() {
  log_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_log_bytes();
}
inline ::google::protobuf::uint64 ServerStats_Raft::log_bytes() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.log_bytes)
  return log_bytes_;
}
inline void ServerStats_Raft::set_log_bytes(::google::protobuf::uint64 value) {
  set_has_log_bytes();
  log_bytes_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.log_bytes)
}

// optional uint64 num_entries_truncated = 37;
inline bool ServerStats_Raft::has_num_entries_truncated() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ServerStats_Raft::set_has_num_entries_truncated() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ServerStats_Raft::clear_has_num_entries_truncated() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ServerStats_Raft::clear_num_entries_truncated() {
  num_entries_truncated_ = GOOGLE_ULONGLONG(0);
  clear_has_num_entries_truncated();
}
inline ::google::protobuf::uint64 ServerStats_Raft::num_entries_truncated() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.num_entries_truncated)
  return num_entries_truncated_;
}
inline void ServerStats_Raft::set_num_entries_truncated(::google::protobuf::uint64 value) {
  set_has_num_entries_truncated();
  num_entries_truncated_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Raft.num_entries_truncated)
}

// repeated .LogCabin.Protocol.ServerStats.Raft.Peer peer = 91;
inline int ServerStats_Raft::peer_size() const {
  return peer_.size();
}
inline void ServerStats_Raft::clear_peer() {
  peer_.Clear();
}
inline const ::LogCabin::Protocol::ServerStats_Raft_Peer& ServerStats_Raft::peer(int index) const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Raft.peer)
  return peer_.Get(index);
}
inline ::LogCabin::Protocol::ServerStats_Raft_Peer* ServerStats_Raft::mutable_peer(int index) {
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.Raft.peer)
  return peer_.Mutable(index);
}
inline ::LogCabin::Protocol::ServerStats_Raft_Peer* ServerStats_Raft::add_peer() {
  // @@protoc_insertion_point(field_add:LogCabin.Protocol.ServerStats.Raft.peer)
  return peer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::ServerStats_Raft_Peer >&
ServerStats_Raft::peer() const {
  // @@protoc_insertion_point(field_list:LogCabin.Protocol.ServerStats.Raft.peer)
  return peer_;
}
inline ::google::protobuf::RepeatedPtrField< ::LogCabin::Protocol::ServerStats_Raft_Peer >*
ServerStats_Raft::mutable_peer() {
  // @@protoc_insertion_point(field_mutable_list:LogCabin.Protocol.ServerStats.Raft.peer)
  return &peer_;
}

// -------------------------------------------------------------------

// ServerStats_Storage

// optional uint64 num_segments = 1;
inline bool ServerStats_Storage::has_num_segments() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStats_Storage::set_has_num_segments() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStats_Storage::clear_has_num_segments() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStats_Storage::clear_num_segments() {
  num_segments_ = GOOGLE_ULONGLONG(0);
  clear_has_num_segments();
}
inline ::google::protobuf::uint64 ServerStats_Storage::num_segments() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Storage.num_segments)
  return num_segments_;
}
inline void ServerStats_Storage::set_num_segments(::google::protobuf::uint64 value) {
  set_has_num_segments();
  num_segments_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Storage.num_segments)
}

// optional uint64 open_segment_bytes = 2;
inline bool ServerStats_Storage::has_open_segment_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStats_Storage::set_has_open_segment_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStats_Storage::clear_has_open_segment_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStats_Storage::clear_open_segment_bytes() {
  open_segment_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_open_segment_bytes();
}
inline ::google::protobuf::uint64 ServerStats_Storage::open_segment_bytes() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Storage.open_segment_bytes)
  return open_segment_bytes_;
}
inline void ServerStats_Storage::set_open_segment_bytes(::google::protobuf::uint64 value) {
  set_has_open_segment_bytes();
  open_segment_bytes_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Storage.open_segment_bytes)
}

// optional uint64 metadata_version = 3;
inline bool ServerStats_Storage::has_metadata_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStats_Storage::set_has_metadata_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStats_Storage::clear_has_metadata_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStats_Storage::clear_metadata_version() {
  metadata_version_ = GOOGLE_ULONGLONG(0);
  clear_has_metadata_version();
}
inline ::google::protobuf::uint64 ServerStats_Storage::metadata_version() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Storage.metadata_version)
  return metadata_version_;
}
inline void ServerStats_Storage::set_metadata_version(::google::protobuf::uint64 value) {
  set_has_metadata_version();
  metadata_version_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Storage.metadata_version)
}

// optional .LogCabin.Protocol.RollingStat metadata_write_nanos = 4;
inline bool ServerStats_Storage::has_metadata_write_nanos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStats_Storage::set_has_metadata_write_nanos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStats_Storage::clear_has_metadata_write_nanos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStats_Storage::clear_metadata_write_nanos() {
  if (metadata_write_nanos_ != NULL) metadata_write_nanos_->::LogCabin::Protocol::RollingStat::Clear();
  clear_has_metadata_write_nanos();
}
inline const ::LogCabin::Protocol::RollingStat& ServerStats_Storage::metadata_write_nanos() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Storage.metadata_write_nanos)
  return metadata_write_nanos_ != NULL ? *metadata_write_nanos_ : *default_instance_->metadata_write_nanos_;
}
inline ::LogCabin::Protocol::RollingStat* ServerStats_Storage::mutable_metadata_write_nanos() {
  set_has_metadata_write_nanos();
  if (metadata_write_nanos_ == NULL) metadata_write_nanos_ = new ::LogCabin::Protocol::RollingStat;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.Storage.metadata_write_nanos)
  return metadata_write_nanos_;
}
inline ::LogCabin::Protocol::RollingStat* ServerStats_Storage::release_metadata_write_nanos() {
  clear_has_metadata_write_nanos();
  ::LogCabin::Protocol::RollingStat* temp = metadata_write_nanos_;
  metadata_write_nanos_ = NULL;
  return temp;
}
inline void ServerStats_Storage::set_allocated_metadata_write_nanos(::LogCabin::Protocol::RollingStat* metadata_write_nanos) {
  delete metadata_write_nanos_;
  metadata_write_nanos_ = metadata_write_nanos;
  if (metadata_write_nanos) {
    set_has_metadata_write_nanos();
  } else {
    clear_has_metadata_write_nanos();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.Storage.metadata_write_nanos)
}

// optional .LogCabin.Protocol.RollingStat filesystem_ops_nanos = 5;
inline bool ServerStats_Storage::has_filesystem_ops_nanos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStats_Storage::set_has_filesystem_ops_nanos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStats_Storage::clear_has_filesystem_ops_nanos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStats_Storage::clear_filesystem_ops_nanos() {
  if (filesystem_ops_nanos_ != NULL) filesystem_ops_nanos_->::LogCabin::Protocol::RollingStat::Clear();
  clear_has_filesystem_ops_nanos();
}
inline const ::LogCabin::Protocol::RollingStat& ServerStats_Storage::filesystem_ops_nanos() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Storage.filesystem_ops_nanos)
  return filesystem_ops_nanos_ != NULL ? *filesystem_ops_nanos_ : *default_instance_->filesystem_ops_nanos_;
}
inline ::LogCabin::Protocol::RollingStat* ServerStats_Storage::mutable_filesystem_ops_nanos() {
  set_has_filesystem_ops_nanos();
  if (filesystem_ops_nanos_ == NULL) filesystem_ops_nanos_ = new ::LogCabin::Protocol::RollingStat;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.Storage.filesystem_ops_nanos)
  return filesystem_ops_nanos_;
}
inline ::LogCabin::Protocol::RollingStat* ServerStats_Storage::release_filesystem_ops_nanos() {
  clear_has_filesystem_ops_nanos();
  ::LogCabin::Protocol::RollingStat* temp = filesystem_ops_nanos_;
  filesystem_ops_nanos_ = NULL;
  return temp;
}
inline void ServerStats_Storage::set_allocated_filesystem_ops_nanos(::LogCabin::Protocol::RollingStat* filesystem_ops_nanos) {
  delete filesystem_ops_nanos_;
  filesystem_ops_nanos_ = filesystem_ops_nanos;
  if (filesystem_ops_nanos) {
    set_has_filesystem_ops_nanos();
  } else {
    clear_has_filesystem_ops_nanos();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.Storage.filesystem_ops_nanos)
}

// -------------------------------------------------------------------

// ServerStats_Tree

// optional uint64 num_conditions_checked = 1;
inline bool ServerStats_Tree::has_num_conditions_checked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStats_Tree::set_has_num_conditions_checked() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStats_Tree::clear_has_num_conditions_checked() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStats_Tree::clear_num_conditions_checked() {
  num_conditions_checked_ = GOOGLE_ULONGLONG(0);
  clear_has_num_conditions_checked();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_conditions_checked() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_conditions_checked)
  return num_conditions_checked_;
}
inline void ServerStats_Tree::set_num_conditions_checked(::google::protobuf::uint64 value) {
  set_has_num_conditions_checked();
  num_conditions_checked_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_conditions_checked)
}

// optional uint64 num_conditions_failed = 2;
inline bool ServerStats_Tree::has_num_conditions_failed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStats_Tree::set_has_num_conditions_failed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStats_Tree::clear_has_num_conditions_failed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStats_Tree::clear_num_conditions_failed() {
  num_conditions_failed_ = GOOGLE_ULONGLONG(0);
  clear_has_num_conditions_failed();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_conditions_failed() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_conditions_failed)
  return num_conditions_failed_;
}
inline void ServerStats_Tree::set_num_conditions_failed(::google::protobuf::uint64 value) {
  set_has_num_conditions_failed();
  num_conditions_failed_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_conditions_failed)
}

// optional uint64 num_make_directory_attempted = 3;
inline bool ServerStats_Tree::has_num_make_directory_attempted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStats_Tree::set_has_num_make_directory_attempted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStats_Tree::clear_has_num_make_directory_attempted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStats_Tree::clear_num_make_directory_attempted() {
  num_make_directory_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_make_directory_attempted();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_make_directory_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_make_directory_attempted)
  return num_make_directory_attempted_;
}
inline void ServerStats_Tree::set_num_make_directory_attempted(::google::protobuf::uint64 value) {
  set_has_num_make_directory_attempted();
  num_make_directory_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_make_directory_attempted)
}

// optional uint64 num_make_directory_success = 4;
inline bool ServerStats_Tree::has_num_make_directory_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStats_Tree::set_has_num_make_directory_success() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStats_Tree::clear_has_num_make_directory_success() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStats_Tree::clear_num_make_directory_success() {
  num_make_directory_success_ = GOOGLE_ULONGLONG(0);
  clear_has_num_make_directory_success();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_make_directory_success() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_make_directory_success)
  return num_make_directory_success_;
}
inline void ServerStats_Tree::set_num_make_directory_success(::google::protobuf::uint64 value) {
  set_has_num_make_directory_success();
  num_make_directory_success_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_make_directory_success)
}

// optional uint64 num_list_directory_attempted = 5;
inline bool ServerStats_Tree::has_num_list_directory_attempted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStats_Tree::set_has_num_list_directory_attempted() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStats_Tree::clear_has_num_list_directory_attempted() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStats_Tree::clear_num_list_directory_attempted() {
  num_list_directory_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_list_directory_attempted();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_list_directory_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_list_directory_attempted)
  return num_list_directory_attempted_;
}
inline void ServerStats_Tree::set_num_list_directory_attempted(::google::protobuf::uint64 value) {
  set_has_num_list_directory_attempted();
  num_list_directory_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_list_directory_attempted)
}

// optional uint64 num_list_directory_success = 6;
inline bool ServerStats_Tree::has_num_list_directory_success() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerStats_Tree::set_has_num_list_directory_success() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerStats_Tree::clear_has_num_list_directory_success() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerStats_Tree::clear_num_list_directory_success() {
  num_list_directory_success_ = GOOGLE_ULONGLONG(0);
  clear_has_num_list_directory_success();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_list_directory_success() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_list_directory_success)
  return num_list_directory_success_;
}
inline void ServerStats_Tree::set_num_list_directory_success(::google::protobuf::uint64 value) {
  set_has_num_list_directory_success();
  num_list_directory_success_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_list_directory_success)
}

// optional uint64 num_remove_directory_attempted = 7;
inline bool ServerStats_Tree::has_num_remove_directory_attempted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_directory_attempted() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerStats_Tree::clear_has_num_remove_directory_attempted() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerStats_Tree::clear_num_remove_directory_attempted() {
  num_remove_directory_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_directory_attempted();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_directory_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_attempted)
  return num_remove_directory_attempted_;
}
inline void ServerStats_Tree::set_num_remove_directory_attempted(::google::protobuf::uint64 value) {
  set_has_num_remove_directory_attempted();
  num_remove_directory_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_attempted)
}

// optional uint64 num_remove_directory_parent_not_found = 8;
inline bool ServerStats_Tree::has_num_remove_directory_parent_not_found() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_directory_parent_not_found() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServerStats_Tree::clear_has_num_remove_directory_parent_not_found() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServerStats_Tree::clear_num_remove_directory_parent_not_found() {
  num_remove_directory_parent_not_found_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_directory_parent_not_found();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_directory_parent_not_found() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_parent_not_found)
  return num_remove_directory_parent_not_found_;
}
inline void ServerStats_Tree::set_num_remove_directory_parent_not_found(::google::protobuf::uint64 value) {
  set_has_num_remove_directory_parent_not_found();
  num_remove_directory_parent_not_found_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_parent_not_found)
}

// optional uint64 num_remove_directory_target_not_found = 9;
inline bool ServerStats_Tree::has_num_remove_directory_target_not_found() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_directory_target_not_found() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServerStats_Tree::clear_has_num_remove_directory_target_not_found() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServerStats_Tree::clear_num_remove_directory_target_not_found() {
  num_remove_directory_target_not_found_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_directory_target_not_found();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_directory_target_not_found() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_target_not_found)
  return num_remove_directory_target_not_found_;
}
inline void ServerStats_Tree::set_num_remove_directory_target_not_found(::google::protobuf::uint64 value) {
  set_has_num_remove_directory_target_not_found();
  num_remove_directory_target_not_found_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_target_not_found)
}

// optional uint64 num_remove_directory_done = 10;
inline bool ServerStats_Tree::has_num_remove_directory_done() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_directory_done() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServerStats_Tree::clear_has_num_remove_directory_done() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServerStats_Tree::clear_num_remove_directory_done() {
  num_remove_directory_done_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_directory_done();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_directory_done() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_done)
  return num_remove_directory_done_;
}
inline void ServerStats_Tree::set_num_remove_directory_done(::google::protobuf::uint64 value) {
  set_has_num_remove_directory_done();
  num_remove_directory_done_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_done)
}

// optional uint64 num_remove_directory_success = 11;
inline bool ServerStats_Tree::has_num_remove_directory_success() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_directory_success() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServerStats_Tree::clear_has_num_remove_directory_success() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServerStats_Tree::clear_num_remove_directory_success() {
  num_remove_directory_success_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_directory_success();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_directory_success() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_success)
  return num_remove_directory_success_;
}
inline void ServerStats_Tree::set_num_remove_directory_success(::google::protobuf::uint64 value) {
  set_has_num_remove_directory_success();
  num_remove_directory_success_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_directory_success)
}

// optional uint64 num_write_attempted = 12;
inline bool ServerStats_Tree::has_num_write_attempted() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ServerStats_Tree::set_has_num_write_attempted() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ServerStats_Tree::clear_has_num_write_attempted() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ServerStats_Tree::clear_num_write_attempted() {
  num_write_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_write_attempted();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_write_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_write_attempted)
  return num_write_attempted_;
}
inline void ServerStats_Tree::set_num_write_attempted(::google::protobuf::uint64 value) {
  set_has_num_write_attempted();
  num_write_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_write_attempted)
}

// optional uint64 num_write_success = 13;
inline bool ServerStats_Tree::has_num_write_success() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ServerStats_Tree::set_has_num_write_success() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ServerStats_Tree::clear_has_num_write_success() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ServerStats_Tree::clear_num_write_success() {
  num_write_success_ = GOOGLE_ULONGLONG(0);
  clear_has_num_write_success();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_write_success() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_write_success)
  return num_write_success_;
}
inline void ServerStats_Tree::set_num_write_success(::google::protobuf::uint64 value) {
  set_has_num_write_success();
  num_write_success_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_write_success)
}

// optional uint64 num_read_attempted = 14;
inline bool ServerStats_Tree::has_num_read_attempted() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ServerStats_Tree::set_has_num_read_attempted() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ServerStats_Tree::clear_has_num_read_attempted() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ServerStats_Tree::clear_num_read_attempted() {
  num_read_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_read_attempted();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_read_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_read_attempted)
  return num_read_attempted_;
}
inline void ServerStats_Tree::set_num_read_attempted(::google::protobuf::uint64 value) {
  set_has_num_read_attempted();
  num_read_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_read_attempted)
}

// optional uint64 num_read_success = 15;
inline bool ServerStats_Tree::has_num_read_success() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ServerStats_Tree::set_has_num_read_success() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ServerStats_Tree::clear_has_num_read_success() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ServerStats_Tree::clear_num_read_success() {
  num_read_success_ = GOOGLE_ULONGLONG(0);
  clear_has_num_read_success();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_read_success() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_read_success)
  return num_read_success_;
}
inline void ServerStats_Tree::set_num_read_success(::google::protobuf::uint64 value) {
  set_has_num_read_success();
  num_read_success_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_read_success)
}

// optional uint64 num_remove_file_attempted = 16;
inline bool ServerStats_Tree::has_num_remove_file_attempted() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_file_attempted() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ServerStats_Tree::clear_has_num_remove_file_attempted() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ServerStats_Tree::clear_num_remove_file_attempted() {
  num_remove_file_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_file_attempted();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_file_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_file_attempted)
  return num_remove_file_attempted_;
}
inline void ServerStats_Tree::set_num_remove_file_attempted(::google::protobuf::uint64 value) {
  set_has_num_remove_file_attempted();
  num_remove_file_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_file_attempted)
}

// optional uint64 num_remove_file_parent_not_found = 17;
inline bool ServerStats_Tree::has_num_remove_file_parent_not_found() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_file_parent_not_found() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ServerStats_Tree::clear_has_num_remove_file_parent_not_found() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ServerStats_Tree::clear_num_remove_file_parent_not_found() {
  num_remove_file_parent_not_found_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_file_parent_not_found();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_file_parent_not_found() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_file_parent_not_found)
  return num_remove_file_parent_not_found_;
}
inline void ServerStats_Tree::set_num_remove_file_parent_not_found(::google::protobuf::uint64 value) {
  set_has_num_remove_file_parent_not_found();
  num_remove_file_parent_not_found_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_file_parent_not_found)
}

// optional uint64 num_remove_file_target_not_found = 18;
inline bool ServerStats_Tree::has_num_remove_file_target_not_found() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_file_target_not_found() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ServerStats_Tree::clear_has_num_remove_file_target_not_found() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ServerStats_Tree::clear_num_remove_file_target_not_found() {
  num_remove_file_target_not_found_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_file_target_not_found();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_file_target_not_found() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_file_target_not_found)
  return num_remove_file_target_not_found_;
}
inline void ServerStats_Tree::set_num_remove_file_target_not_found(::google::protobuf::uint64 value) {
  set_has_num_remove_file_target_not_found();
  num_remove_file_target_not_found_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_file_target_not_found)
}

// optional uint64 num_remove_file_done = 19;
inline bool ServerStats_Tree::has_num_remove_file_done() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_file_done() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ServerStats_Tree::clear_has_num_remove_file_done() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ServerStats_Tree::clear_num_remove_file_done() {
  num_remove_file_done_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_file_done();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_file_done() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_file_done)
  return num_remove_file_done_;
}
inline void ServerStats_Tree::set_num_remove_file_done(::google::protobuf::uint64 value) {
  set_has_num_remove_file_done();
  num_remove_file_done_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_file_done)
}

// optional uint64 num_remove_file_success = 20;
inline bool ServerStats_Tree::has_num_remove_file_success() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ServerStats_Tree::set_has_num_remove_file_success() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ServerStats_Tree::clear_has_num_remove_file_success() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ServerStats_Tree::clear_num_remove_file_success() {
  num_remove_file_success_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remove_file_success();
}
inline ::google::protobuf::uint64 ServerStats_Tree::num_remove_file_success() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.Tree.num_remove_file_success)
  return num_remove_file_success_;
}
inline void ServerStats_Tree::set_num_remove_file_success(::google::protobuf::uint64 value) {
  set_has_num_remove_file_success();
  num_remove_file_success_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.Tree.num_remove_file_success)
}

// -------------------------------------------------------------------

// ServerStats_StateMachine

// optional bool snapshotting = 1;
inline bool ServerStats_StateMachine::has_snapshotting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStats_StateMachine::set_has_snapshotting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStats_StateMachine::clear_has_snapshotting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStats_StateMachine::clear_snapshotting() {
  snapshotting_ = false;
  clear_has_snapshotting();
}
inline bool ServerStats_StateMachine::snapshotting() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.snapshotting)
  return snapshotting_;
}
inline void ServerStats_StateMachine::set_snapshotting(bool value) {
  set_has_snapshotting();
  snapshotting_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.snapshotting)
}

// optional uint64 last_applied = 2;
inline bool ServerStats_StateMachine::has_last_applied() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStats_StateMachine::set_has_last_applied() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStats_StateMachine::clear_has_last_applied() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStats_StateMachine::clear_last_applied() {
  last_applied_ = GOOGLE_ULONGLONG(0);
  clear_has_last_applied();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::last_applied() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.last_applied)
  return last_applied_;
}
inline void ServerStats_StateMachine::set_last_applied(::google::protobuf::uint64 value) {
  set_has_last_applied();
  last_applied_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.last_applied)
}

// optional uint64 num_sessions = 3;
inline bool ServerStats_StateMachine::has_num_sessions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_sessions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStats_StateMachine::clear_has_num_sessions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStats_StateMachine::clear_num_sessions() {
  num_sessions_ = GOOGLE_ULONGLONG(0);
  clear_has_num_sessions();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_sessions() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_sessions)
  return num_sessions_;
}
inline void ServerStats_StateMachine::set_num_sessions(::google::protobuf::uint64 value) {
  set_has_num_sessions();
  num_sessions_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_sessions)
}

// optional uint64 num_snapshots_attempted = 4;
inline bool ServerStats_StateMachine::has_num_snapshots_attempted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_snapshots_attempted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStats_StateMachine::clear_has_num_snapshots_attempted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStats_StateMachine::clear_num_snapshots_attempted() {
  num_snapshots_attempted_ = GOOGLE_ULONGLONG(0);
  clear_has_num_snapshots_attempted();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_snapshots_attempted() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_snapshots_attempted)
  return num_snapshots_attempted_;
}
inline void ServerStats_StateMachine::set_num_snapshots_attempted(::google::protobuf::uint64 value) {
  set_has_num_snapshots_attempted();
  num_snapshots_attempted_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_snapshots_attempted)
}

// optional uint64 num_snapshots_failed = 5;
inline bool ServerStats_StateMachine::has_num_snapshots_failed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_snapshots_failed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStats_StateMachine::clear_has_num_snapshots_failed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStats_StateMachine::clear_num_snapshots_failed() {
  num_snapshots_failed_ = GOOGLE_ULONGLONG(0);
  clear_has_num_snapshots_failed();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_snapshots_failed() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_snapshots_failed)
  return num_snapshots_failed_;
}
inline void ServerStats_StateMachine::set_num_snapshots_failed(::google::protobuf::uint64 value) {
  set_has_num_snapshots_failed();
  num_snapshots_failed_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_snapshots_failed)
}

// optional uint64 num_redundant_advance_version_entries = 6;
inline bool ServerStats_StateMachine::has_num_redundant_advance_version_entries() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_redundant_advance_version_entries() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerStats_StateMachine::clear_has_num_redundant_advance_version_entries() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerStats_StateMachine::clear_num_redundant_advance_version_entries() {
  num_redundant_advance_version_entries_ = GOOGLE_ULONGLONG(0);
  clear_has_num_redundant_advance_version_entries();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_redundant_advance_version_entries() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_redundant_advance_version_entries)
  return num_redundant_advance_version_entries_;
}
inline void ServerStats_StateMachine::set_num_redundant_advance_version_entries(::google::protobuf::uint64 value) {
  set_has_num_redundant_advance_version_entries();
  num_redundant_advance_version_entries_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_redundant_advance_version_entries)
}

// optional uint64 num_rejected_advance_version_entries = 7;
inline bool ServerStats_StateMachine::has_num_rejected_advance_version_entries() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_rejected_advance_version_entries() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerStats_StateMachine::clear_has_num_rejected_advance_version_entries() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerStats_StateMachine::clear_num_rejected_advance_version_entries() {
  num_rejected_advance_version_entries_ = GOOGLE_ULONGLONG(0);
  clear_has_num_rejected_advance_version_entries();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_rejected_advance_version_entries() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_rejected_advance_version_entries)
  return num_rejected_advance_version_entries_;
}
inline void ServerStats_StateMachine::set_num_rejected_advance_version_entries(::google::protobuf::uint64 value) {
  set_has_num_rejected_advance_version_entries();
  num_rejected_advance_version_entries_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_rejected_advance_version_entries)
}

// optional uint64 num_successful_advance_version_entries = 8;
inline bool ServerStats_StateMachine::has_num_successful_advance_version_entries() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_successful_advance_version_entries() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServerStats_StateMachine::clear_has_num_successful_advance_version_entries() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServerStats_StateMachine::clear_num_successful_advance_version_entries() {
  num_successful_advance_version_entries_ = GOOGLE_ULONGLONG(0);
  clear_has_num_successful_advance_version_entries();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_successful_advance_version_entries() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_successful_advance_version_entries)
  return num_successful_advance_version_entries_;
}
inline void ServerStats_StateMachine::set_num_successful_advance_version_entries(::google::protobuf::uint64 value) {
  set_has_num_successful_advance_version_entries();
  num_successful_advance_version_entries_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_successful_advance_version_entries)
}

// optional uint64 num_total_advance_version_entries = 9;
inline bool ServerStats_StateMachine::has_num_total_advance_version_entries() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_total_advance_version_entries() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServerStats_StateMachine::clear_has_num_total_advance_version_entries() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServerStats_StateMachine::clear_num_total_advance_version_entries() {
  num_total_advance_version_entries_ = GOOGLE_ULONGLONG(0);
  clear_has_num_total_advance_version_entries();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_total_advance_version_entries() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_total_advance_version_entries)
  return num_total_advance_version_entries_;
}
inline void ServerStats_StateMachine::set_num_total_advance_version_entries(::google::protobuf::uint64 value) {
  set_has_num_total_advance_version_entries();
  num_total_advance_version_entries_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_total_advance_version_entries)
}

// optional uint32 min_supported_version = 10;
inline bool ServerStats_StateMachine::has_min_supported_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServerStats_StateMachine::set_has_min_supported_version() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServerStats_StateMachine::clear_has_min_supported_version() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServerStats_StateMachine::clear_min_supported_version() {
  min_supported_version_ = 0u;
  clear_has_min_supported_version();
}
inline ::google::protobuf::uint32 ServerStats_StateMachine::min_supported_version() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.min_supported_version)
  return min_supported_version_;
}
inline void ServerStats_StateMachine::set_min_supported_version(::google::protobuf::uint32 value) {
  set_has_min_supported_version();
  min_supported_version_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.min_supported_version)
}

// optional uint32 max_supported_version = 11;
inline bool ServerStats_StateMachine::has_max_supported_version() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServerStats_StateMachine::set_has_max_supported_version() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServerStats_StateMachine::clear_has_max_supported_version() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServerStats_StateMachine::clear_max_supported_version() {
  max_supported_version_ = 0u;
  clear_has_max_supported_version();
}
inline ::google::protobuf::uint32 ServerStats_StateMachine::max_supported_version() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.max_supported_version)
  return max_supported_version_;
}
inline void ServerStats_StateMachine::set_max_supported_version(::google::protobuf::uint32 value) {
  set_has_max_supported_version();
  max_supported_version_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.max_supported_version)
}

// optional uint32 running_version = 12;
inline bool ServerStats_StateMachine::has_running_version() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ServerStats_StateMachine::set_has_running_version() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ServerStats_StateMachine::clear_has_running_version() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ServerStats_StateMachine::clear_running_version() {
  running_version_ = 0u;
  clear_has_running_version();
}
inline ::google::protobuf::uint32 ServerStats_StateMachine::running_version() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.running_version)
  return running_version_;
}
inline void ServerStats_StateMachine::set_running_version(::google::protobuf::uint32 value) {
  set_has_running_version();
  running_version_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.running_version)
}

// optional .LogCabin.Protocol.ServerStats.Tree tree = 13;
inline bool ServerStats_StateMachine::has_tree() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ServerStats_StateMachine::set_has_tree() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ServerStats_StateMachine::clear_has_tree() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ServerStats_StateMachine::clear_tree() {
  if (tree_ != NULL) tree_->::LogCabin::Protocol::ServerStats_Tree::Clear();
  clear_has_tree();
}
inline const ::LogCabin::Protocol::ServerStats_Tree& ServerStats_StateMachine::tree() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.tree)
  return tree_ != NULL ? *tree_ : *default_instance_->tree_;
}
inline ::LogCabin::Protocol::ServerStats_Tree* ServerStats_StateMachine::mutable_tree() {
  set_has_tree();
  if (tree_ == NULL) tree_ = new ::LogCabin::Protocol::ServerStats_Tree;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.StateMachine.tree)
  return tree_;
}
inline ::LogCabin::Protocol::ServerStats_Tree* ServerStats_StateMachine::release_tree() {
  clear_has_tree();
  ::LogCabin::Protocol::ServerStats_Tree* temp = tree_;
  tree_ = NULL;
  return temp;
}
inline void ServerStats_StateMachine::set_allocated_tree(::LogCabin::Protocol::ServerStats_Tree* tree) {
  delete tree_;
  tree_ = tree;
  if (tree) {
    set_has_tree();
  } else {
    clear_has_tree();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.StateMachine.tree)
}

// optional uint64 num_unknown_requests = 14;
inline bool ServerStats_StateMachine::has_num_unknown_requests() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ServerStats_StateMachine::set_has_num_unknown_requests() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ServerStats_StateMachine::clear_has_num_unknown_requests() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ServerStats_StateMachine::clear_num_unknown_requests() {
  num_unknown_requests_ = GOOGLE_ULONGLONG(0);
  clear_has_num_unknown_requests();
}
inline ::google::protobuf::uint64 ServerStats_StateMachine::num_unknown_requests() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.num_unknown_requests)
  return num_unknown_requests_;
}
inline void ServerStats_StateMachine::set_num_unknown_requests(::google::protobuf::uint64 value) {
  set_has_num_unknown_requests();
  num_unknown_requests_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.num_unknown_requests)
}

// optional int64 may_snapshot_at = 15;
inline bool ServerStats_StateMachine::has_may_snapshot_at() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ServerStats_StateMachine::set_has_may_snapshot_at() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ServerStats_StateMachine::clear_has_may_snapshot_at() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ServerStats_StateMachine::clear_may_snapshot_at() {
  may_snapshot_at_ = GOOGLE_LONGLONG(0);
  clear_has_may_snapshot_at();
}
inline ::google::protobuf::int64 ServerStats_StateMachine::may_snapshot_at() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.StateMachine.may_snapshot_at)
  return may_snapshot_at_;
}
inline void ServerStats_StateMachine::set_may_snapshot_at(::google::protobuf::int64 value) {
  set_has_may_snapshot_at();
  may_snapshot_at_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.StateMachine.may_snapshot_at)
}

// -------------------------------------------------------------------

// ServerStats

// optional uint64 server_id = 1;
inline bool ServerStats::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStats::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStats::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStats::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 ServerStats::server_id() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.server_id)
  return server_id_;
}
inline void ServerStats::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.server_id)
}

// optional string addresses = 2;
inline bool ServerStats::has_addresses() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStats::set_has_addresses() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStats::clear_has_addresses() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStats::clear_addresses() {
  if (addresses_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_->clear();
  }
  clear_has_addresses();
}
inline const ::std::string& ServerStats::addresses() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.addresses)
  return *addresses_;
}
inline void ServerStats::set_addresses(const ::std::string& value) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(value);
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.addresses)
}
inline void ServerStats::set_addresses(const char* value) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogCabin.Protocol.ServerStats.addresses)
}
inline void ServerStats::set_addresses(const char* value, size_t size) {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  addresses_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogCabin.Protocol.ServerStats.addresses)
}
inline ::std::string* ServerStats::mutable_addresses() {
  set_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addresses_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.addresses)
  return addresses_;
}
inline ::std::string* ServerStats::release_addresses() {
  clear_has_addresses();
  if (addresses_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = addresses_;
    addresses_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerStats::set_allocated_addresses(::std::string* addresses) {
  if (addresses_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete addresses_;
  }
  if (addresses) {
    set_has_addresses();
    addresses_ = addresses;
  } else {
    clear_has_addresses();
    addresses_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.addresses)
}

// optional int64 start_at = 3;
inline bool ServerStats::has_start_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStats::set_has_start_at() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStats::clear_has_start_at() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStats::clear_start_at() {
  start_at_ = GOOGLE_LONGLONG(0);
  clear_has_start_at();
}
inline ::google::protobuf::int64 ServerStats::start_at() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.start_at)
  return start_at_;
}
inline void ServerStats::set_start_at(::google::protobuf::int64 value) {
  set_has_start_at();
  start_at_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.start_at)
}

// optional int64 end_at = 4;
inline bool ServerStats::has_end_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStats::set_has_end_at() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStats::clear_has_end_at() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStats::clear_end_at() {
  end_at_ = GOOGLE_LONGLONG(0);
  clear_has_end_at();
}
inline ::google::protobuf::int64 ServerStats::end_at() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.end_at)
  return end_at_;
}
inline void ServerStats::set_end_at(::google::protobuf::int64 value) {
  set_has_end_at();
  end_at_ = value;
  // @@protoc_insertion_point(field_set:LogCabin.Protocol.ServerStats.end_at)
}

// optional .LogCabin.Protocol.ServerStats.Raft raft = 11;
inline bool ServerStats::has_raft() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStats::set_has_raft() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStats::clear_has_raft() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStats::clear_raft() {
  if (raft_ != NULL) raft_->::LogCabin::Protocol::ServerStats_Raft::Clear();
  clear_has_raft();
}
inline const ::LogCabin::Protocol::ServerStats_Raft& ServerStats::raft() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.raft)
  return raft_ != NULL ? *raft_ : *default_instance_->raft_;
}
inline ::LogCabin::Protocol::ServerStats_Raft* ServerStats::mutable_raft() {
  set_has_raft();
  if (raft_ == NULL) raft_ = new ::LogCabin::Protocol::ServerStats_Raft;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.raft)
  return raft_;
}
inline ::LogCabin::Protocol::ServerStats_Raft* ServerStats::release_raft() {
  clear_has_raft();
  ::LogCabin::Protocol::ServerStats_Raft* temp = raft_;
  raft_ = NULL;
  return temp;
}
inline void ServerStats::set_allocated_raft(::LogCabin::Protocol::ServerStats_Raft* raft) {
  delete raft_;
  raft_ = raft;
  if (raft) {
    set_has_raft();
  } else {
    clear_has_raft();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.raft)
}

// optional .LogCabin.Protocol.ServerStats.Storage storage = 12;
inline bool ServerStats::has_storage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerStats::set_has_storage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerStats::clear_has_storage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerStats::clear_storage() {
  if (storage_ != NULL) storage_->::LogCabin::Protocol::ServerStats_Storage::Clear();
  clear_has_storage();
}
inline const ::LogCabin::Protocol::ServerStats_Storage& ServerStats::storage() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.storage)
  return storage_ != NULL ? *storage_ : *default_instance_->storage_;
}
inline ::LogCabin::Protocol::ServerStats_Storage* ServerStats::mutable_storage() {
  set_has_storage();
  if (storage_ == NULL) storage_ = new ::LogCabin::Protocol::ServerStats_Storage;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.storage)
  return storage_;
}
inline ::LogCabin::Protocol::ServerStats_Storage* ServerStats::release_storage() {
  clear_has_storage();
  ::LogCabin::Protocol::ServerStats_Storage* temp = storage_;
  storage_ = NULL;
  return temp;
}
inline void ServerStats::set_allocated_storage(::LogCabin::Protocol::ServerStats_Storage* storage) {
  delete storage_;
  storage_ = storage;
  if (storage) {
    set_has_storage();
  } else {
    clear_has_storage();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.storage)
}

// optional .LogCabin.Protocol.ServerStats.StateMachine state_machine = 13;
inline bool ServerStats::has_state_machine() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerStats::set_has_state_machine() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerStats::clear_has_state_machine() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerStats::clear_state_machine() {
  if (state_machine_ != NULL) state_machine_->::LogCabin::Protocol::ServerStats_StateMachine::Clear();
  clear_has_state_machine();
}
inline const ::LogCabin::Protocol::ServerStats_StateMachine& ServerStats::state_machine() const {
  // @@protoc_insertion_point(field_get:LogCabin.Protocol.ServerStats.state_machine)
  return state_machine_ != NULL ? *state_machine_ : *default_instance_->state_machine_;
}
inline ::LogCabin::Protocol::ServerStats_StateMachine* ServerStats::mutable_state_machine() {
  set_has_state_machine();
  if (state_machine_ == NULL) state_machine_ = new ::LogCabin::Protocol::ServerStats_StateMachine;
  // @@protoc_insertion_point(field_mutable:LogCabin.Protocol.ServerStats.state_machine)
  return state_machine_;
}
inline ::LogCabin::Protocol::ServerStats_StateMachine* ServerStats::release_state_machine() {
  clear_has_state_machine();
  ::LogCabin::Protocol::ServerStats_StateMachine* temp = state_machine_;
  state_machine_ = NULL;
  return temp;
}
inline void ServerStats::set_allocated_state_machine(::LogCabin::Protocol::ServerStats_StateMachine* state_machine) {
  delete state_machine_;
  state_machine_ = state_machine;
  if (state_machine) {
    set_has_state_machine();
  } else {
    clear_has_state_machine();
  }
  // @@protoc_insertion_point(field_set_allocated:LogCabin.Protocol.ServerStats.state_machine)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol
}  // namespace LogCabin

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LogCabin::Protocol::ServerStats_Raft_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LogCabin::Protocol::ServerStats_Raft_State>() {
  return ::LogCabin::Protocol::ServerStats_Raft_State_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Protocol_2fServer_2fServerStats_2eproto__INCLUDED
